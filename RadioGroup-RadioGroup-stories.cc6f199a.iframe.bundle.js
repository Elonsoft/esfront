"use strict";(self.webpackChunk_esfront_react=self.webpackChunk_esfront_react||[]).push([[8274],{"./src/components/RadioGroup/RadioGroup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo:()=>Demo,__namedExportsOrder:()=>__namedExportsOrder,default:()=>RadioGroup_stories});var FormControl=__webpack_require__("../../node_modules/@mui/material/FormControl/FormControl.js"),FormControlLabel=__webpack_require__("../../node_modules/@mui/material/FormControlLabel/FormControlLabel.js"),react=__webpack_require__("../../node_modules/react/index.js"),useControlled=__webpack_require__("../../node_modules/@mui/material/utils/useControlled.js"),useForkRef=__webpack_require__("../../node_modules/@mui/material/utils/useForkRef.js"),FormGroup=__webpack_require__("../../node_modules/@mui/material/FormGroup/FormGroup.js"),useId=__webpack_require__("../../node_modules/@mui/utils/useId/useId.js"),RadioGroup_context=__webpack_require__("./src/components/RadioGroup/RadioGroup.context.ts"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const RadioGroup=react.forwardRef((function RadioGroup(props,ref){const{children,defaultValue,name:nameProp,onChange,value:valueProp,...other}=props,rootRef=react.useRef(null),[value,setValueState]=(0,useControlled.Z)({controlled:valueProp,default:defaultValue,name:"RadioGroup"}),handleRef=(0,useForkRef.Z)(ref,rootRef),name=(0,useId.Z)(nameProp),contextValue=react.useMemo((()=>({name,onChange(event){setValueState(event.target.value),onChange&&onChange(event,event.target.value)},value})),[name,onChange,setValueState,value]);return(0,jsx_runtime.jsx)(RadioGroup_context.Z.Provider,{value:contextValue,children:(0,jsx_runtime.jsx)(FormGroup.Z,{ref:handleRef,role:"radiogroup",...other,children})})}));try{RadioGroup.displayName="RadioGroup",RadioGroup.__docgenInfo={description:"",displayName:"RadioGroup",props:{name:{defaultValue:null,description:"The name used to reference the value of the control.\nIf you don't provide this prop, it falls back to a randomly generated name.",name:"name",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"any"}},onChange:{defaultValue:null,description:"Callback fired when a radio button is selected.\n@param event The event source of the callback.\n@param value The value of the selected radio button.\nYou can pull out the new value by accessing `event.target.value` (string).",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, value: string) => void)"}},value:{defaultValue:null,description:"Value of the selected radio button. The DOM API casts this to a string.",name:"value",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/RadioGroup/RadioGroup.tsx#RadioGroup"]={docgenInfo:RadioGroup.__docgenInfo,name:"RadioGroup",path:"src/components/RadioGroup/RadioGroup.tsx#RadioGroup"})}catch(__react_docgen_typescript_loader_error){}var Radio=__webpack_require__("./src/components/Radio/Radio.tsx");const LABELS={en:[{value:"home",label:"Home"},{value:"catalog",label:"Catalog"},{value:"electronics",label:"Electronics"},{value:"tablets",label:"Tablets"},{value:"apple",label:"Apple"}],ru:[{value:"home",label:"Главная страница"},{value:"catalog",label:"Каталог"},{value:"electronics",label:"Электроника"},{value:"tablets",label:"Планшеты"},{value:"apple",label:"Apple"}]},RadioGroup_stories={tags:["autodocs"],component:RadioGroup,parameters:{references:["RadioGroup"]}},Demo={render:(args,context)=>{const locale=context.globals.locale||"en";return(0,jsx_runtime.jsx)(FormControl.Z,{children:(0,jsx_runtime.jsx)(RadioGroup,{"aria-labelledby":"demo-radio-buttons-group-label",defaultValue:"female",name:"radio-buttons-group",...args,children:LABELS[locale].map((item=>(0,jsx_runtime.jsx)(FormControlLabel.Z,{control:(0,jsx_runtime.jsx)(Radio.Y,{}),label:item.label,value:item.value},item.value)))})})}},__namedExportsOrder=["Demo"];Demo.parameters={...Demo.parameters,docs:{...Demo.parameters?.docs,source:{originalSource:"{\n  render: (args, context) => {\n    const locale = (context.globals.locale || 'en') as 'en' | 'ru';\n    return <FormControl>\n        <RadioGroup aria-labelledby=\"demo-radio-buttons-group-label\" defaultValue=\"female\" name=\"radio-buttons-group\" {...args}>\n          {LABELS[locale].map(item => <FormControlLabel key={item.value} control={<Radio />} label={item.label} value={item.value} />)}\n        </RadioGroup>\n      </FormControl>;\n  }\n}",...Demo.parameters?.docs?.source}}}}}]);
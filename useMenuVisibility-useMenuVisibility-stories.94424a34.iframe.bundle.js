"use strict";(self.webpackChunk_esfront_react=self.webpackChunk_esfront_react||[]).push([[1775],{"./src/hooks/useMenuVisibility/useMenuVisibility.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo:()=>Demo,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useMenuVisibility_stories});var Menu=__webpack_require__("../../node_modules/@mui/material/Menu/Menu.js"),react=__webpack_require__("../../node_modules/react/index.js");var Button=__webpack_require__("./src/components/Button/Button.tsx"),MenuItem=__webpack_require__("./src/components/MenuItem/MenuItem.tsx"),useMenu=__webpack_require__("./src/hooks/useMenu/useMenu.ts"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const useMenuVisibility_stories={tags:["autodocs"],title:"Hooks/useMenuVisibility",parameters:{references:["useMenu","useMenuVisibility"]}},Demo={render:function Render(){const[anchorEl,onOpen,onClose]=(0,useMenu.H)(),[visible,onEnter,onExited]=(()=>{const[visible,setVisible]=(0,react.useState)(!1);return[visible,(0,react.useCallback)((()=>{setVisible(!0)}),[]),(0,react.useCallback)((()=>{setVisible(!1)}),[])]})();return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(Button.z,{color:"primary",variant:"contained",onClick:onOpen,children:["Menu ",!visible&&"not"," visible"]}),(0,jsx_runtime.jsxs)(Menu.Z,{TransitionProps:{onEnter,onExited},anchorEl,open:!!anchorEl,onClose,children:[(0,jsx_runtime.jsx)(MenuItem.s,{children:"Item 1"}),(0,jsx_runtime.jsx)(MenuItem.s,{children:"Item 2"})]})]})}},__namedExportsOrder=["Demo"];Demo.parameters={...Demo.parameters,docs:{...Demo.parameters?.docs,source:{originalSource:'{\n  render: function Render() {\n    const [anchorEl, onOpen, onClose] = useMenu();\n    const [visible, onEnter, onExited] = useMenuVisibility();\n    return <>\n        <Button color="primary" variant="contained" onClick={onOpen}>\n          Menu {!visible && \'not\'} visible\n        </Button>\n        <Menu TransitionProps={{\n        onEnter,\n        onExited\n      }} anchorEl={anchorEl} open={!!anchorEl} onClose={onClose}>\n          <MenuItem>Item 1</MenuItem>\n          <MenuItem>Item 2</MenuItem>\n        </Menu>\n      </>;\n  }\n}',...Demo.parameters?.docs?.source}}}}}]);
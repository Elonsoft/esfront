"use strict";(self.webpackChunk_esfront_react=self.webpackChunk_esfront_react||[]).push([[2724],{"./src/components/Tooltip/Tooltip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo:()=>Demo,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@mui/material/styles/useTheme.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@mui/material/Box/Box.js"),___WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Tooltip/Tooltip.tsx"),_Button__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Button/Button.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const getTooltipText=context=>"en"===context.globals.locale?"Tooltip":"Подсказка",getButtonText=context=>"en"===context.globals.locale?"Button":"Кнопка",__WEBPACK_DEFAULT_EXPORT__={tags:["autodocs"],component:___WEBPACK_IMPORTED_MODULE_1__.u,parameters:{references:["Tooltip"]},argTypes:{title:{control:{type:"text"}},children:{table:{disable:!0}},arrowIconMapping:{table:{disable:!0}},describeChild:{table:{disable:!0}},disableInteractive:{table:{disable:!0}},id:{table:{disable:!0}},PopperComponent:{table:{disable:!0}},PopperProps:{table:{disable:!0}},slots:{table:{disable:!0}},slotProps:{table:{disable:!0}},TransitionComponent:{table:{disable:!0}},TransitionProps:{table:{disable:!0}}}},Demo={render:function Render(args,context){const theme=(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z)(),backgroundColor="monoB"===args.color||"monoBA600"===args.color||"whiteA600"===args.color?theme.vars.palette.monoA.A400:void 0;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{sx:{width:"100%",padding:"120px 40px",display:"flex",justifyContent:"center",backgroundColor},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(___WEBPACK_IMPORTED_MODULE_1__.u,{...args,title:args.title||getTooltipText(context),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Button__WEBPACK_IMPORTED_MODULE_4__.z,{color:"primary",variant:"contained",children:getButtonText(context)})})})}},__namedExportsOrder=["Demo"];Demo.parameters={...Demo.parameters,docs:{...Demo.parameters?.docs,source:{originalSource:"{\n  render: function Render(args, context) {\n    const theme = useTheme();\n    const isLightColor = args.color === 'monoB' || args.color === 'monoBA600' || args.color === 'whiteA600';\n    const backgroundColor = isLightColor ? theme.vars.palette.monoA.A400 : undefined;\n    return <Box sx={{\n      width: '100%',\n      padding: '120px 40px',\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor\n    }}>\n        <Tooltip {...args} title={args.title || getTooltipText(context)}>\n          <Button color=\"primary\" variant=\"contained\">\n            {getButtonText(context)}\n          </Button>\n        </Tooltip>\n      </Box>;\n  }\n}",...Demo.parameters?.docs?.source}}}}}]);
import{j as o}from"./jsx-runtime-BoZ7yaty.js";import{c as F}from"./clsx.m-C7bORDfW.js";import{a as E,g as S,s as V,c as I}from"./styled-B0X8gopH.js";import{u as q}from"./useThemeProps-DTzdApbH.js";import{I as j,a as _}from"./IconEyeOff-DzDgnVOp.js";import{u as R}from"./useControlled-DdQm0pQX.js";import{I as H,i as D}from"./InputAdornment-CdlRx1ca.js";import{T as N}from"./Tooltip-CQ-Pr0yE.js";import{B as A,b as U}from"./Button-Bw7cy9Im.js";import{T as $,t as k,o as B,a as M}from"./TextField-Cv87NqMI.js";import"./index-DIDRz_s2.js";import"./_commonjsHelpers-gnU0ypJ3.js";import"./identifier-DA8c-tJk.js";import"./useTheme-B2nYkSwK.js";import"./SvgIcon-BU7TD1_e.js";import"./SvgIcon.classes-C7Fm2IhD.js";import"./memoTheme-CJcpijc4.js";import"./useFormControl-Crkhef2u.js";import"./DefaultPropsProvider-Di_N6kFi.js";import"./Typography-CtYhM0r3.js";import"./index-BubGiXqi.js";import"./extendSxProp-ftMfNaJf.js";import"./emotion-react.browser.esm-BV4sMx87.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./Fade-D0jgUazQ.js";import"./useTheme-D4EsW5Cf.js";import"./getReactElementRef-BCGM00pR.js";import"./TransitionGroupContext-8frXp1f-.js";import"./index-BqLR6Ykc.js";import"./index-B9nU-LZm.js";import"./useForkRef-Cmn-Dh7x.js";import"./useTimeout-BgqVTnbA.js";import"./useControlled-BX5XFdR0.js";import"./useId-DHFVogFr.js";import"./useEvent-B4f6aq-e.js";import"./useForkRef-DJnV46t9.js";import"./appendOwnerState-BTP2NS_9.js";import"./Popper-CJR-SmXy.js";import"./index-CycuZXML.js";import"./ownerDocument-DW-IO8s5.js";import"./Portal-Cdjvc33M.js";import"./useEnhancedEffect-BGNjlb7u.js";import"./useSlotProps-CexWkmt_.js";import"./mergeSlotProps-fp1W1fei.js";import"./ButtonBase-C33Z4or-.js";import"./useSlot-CFc0_OMk.js";import"./formControlState-Dq1zat_P.js";import"./isHostComponent-DVu5iVWx.js";import"./FormControl-CYKlpDDs.js";import"./isMuiElement-DbqDAyDR.js";import"./ownerWindow-HkKU3E4x.js";import"./useEventCallback-B5h_k30D.js";import"./debounce-Be36O1Ab.js";import"./FormHelperText-Cdrn0csy.js";import"./Menu-DtX3jm--.js";import"./Popover-C64DOLfh.js";import"./Grow-xlv4EofS.js";import"./mergeSlotProps-D4lRB2Fy.js";import"./Modal-CpL86C22.js";import"./getScrollbarSize-CaCM53D3.js";import"./createChainedFunction-BO_9K8Jh.js";import"./FocusTrap-vTo9pgoY.js";import"./MenuList-qnTf9CO-.js";import"./createSvgIcon-CW64547e.js";import"./SvgIcon-U0LES8Ux.js";function L(e){return E("ESPasswordField",e)}S("ESPasswordField",["root"]);const O=e=>{const{classes:s}=e;return I({root:["root"]},L,s)},z=V($,{name:"ESPasswordField",slot:"Root",overridesResolver:(e,s)=>s.root})(({theme:e})=>({[`.${B.root}.${M.adornedEnd}`]:{paddingRight:"0px"},[`&.${k.root}`]:{[`& .${D.positionEnd}`]:{paddingRight:"7px",[`& .${U.root}`]:{"--icon":e.vars.palette.monoA.A500}}}})),i=e=>{const{classes:s,className:l,visible:f,onVisibilityChange:n,labelHidePassword:p,labelShowPassword:d,iconHidePassword:w=o.jsx(j,{}),iconShowPassword:b=o.jsx(_,{}),InputProps:P,TooltipProps:h,...y}=q({props:e,name:"ESPasswordField"}),[t,g]=R(!1,f),v=()=>{g(!t),n&&n(!t)},T=a=>{a.preventDefault()},x=a=>{a.preventDefault()},C=O({classes:s});return o.jsx(z,{InputProps:{endAdornment:o.jsx(H,{position:"end",children:o.jsx(N,{arrow:!0,disableInteractive:!0,placement:"top-end",title:t?p:d,...h,children:o.jsx(A,{rounded:!0,"aria-label":t?p:d,onClick:v,onMouseDown:T,onMouseUp:x,children:t?w:b})})}),...P},className:F(C.root,l),classes:s,type:t?"text":"password",...y})};try{i.displayName="PasswordField",i.__docgenInfo={description:"The PasswordField allows users to input passwords with ability to toggle password visibility.",displayName:"PasswordField",props:{visible:{defaultValue:null,description:"If true, the password is visible.",name:"visible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Callback fired when user changes password visibility.",name:"onVisibilityChange",required:!1,type:{name:"((visible: boolean) => void)"}},labelHidePassword:{defaultValue:null,description:"Text for the toggle button aria-label when password is visible.",name:"labelHidePassword",required:!1,type:{name:"string"}},labelShowPassword:{defaultValue:null,description:"Text for the toggle button aria-label when password is hidden.",name:"labelShowPassword",required:!1,type:{name:"string"}},iconHidePassword:{defaultValue:null,description:"Icon for the toggle button when password is visible.",name:"iconHidePassword",required:!1,type:{name:"ReactNode"}},iconShowPassword:{defaultValue:null,description:"Icon for the toggle button when password is hidden.",name:"iconShowPassword",required:!1,type:{name:"ReactNode"}},TooltipProps:{defaultValue:null,description:"Props applied to the Tooltip components.",name:"TooltipProps",required:!1,type:{name:"Partial<TooltipProps>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<TextFieldSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:'{ root?: SlotProps<ElementType<FormControlProps<"div", {}>, keyof IntrinsicElements>, {}, BaseTextFieldProps>; ... 4 more ...; select?: SlotProps<...>; } | { ...; } | { ...; } | undefined'}}}}}catch{}const ro={tags:["autodocs"],component:i,parameters:{references:["PasswordField"]},argTypes:{focused:{table:{disable:!0}},hiddenLabel:{table:{disable:!0}},margin:{table:{disable:!0}}}},r={render:e=>o.jsx(i,{...e})};var m,u,c;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: args => {
    return <PasswordField {...args} />;
  }
}`,...(c=(u=r.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};const io=["Demo"];export{r as Demo,io as __namedExportsOrder,ro as default};

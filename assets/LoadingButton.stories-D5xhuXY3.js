import{j as a}from"./jsx-runtime-BoZ7yaty.js";import{I as n}from"./IconChevronDownW400-QXFu20i-.js";import{r as z}from"./index-DIDRz_s2.js";import{g as S,a as C,s as b,c as _}from"./generateUtilityClasses-D4qQEpRV.js";import{b as q}from"./useThemeProps-DJft-tfL.js";import{u as R}from"./useId-Dx6QqNEU.js";import{S as T,s as V}from"./SpinnerFadingDots-C7ZnTHdO.js";import{B as P,b as f}from"./Button-Kloa1MkC.js";import{b as E}from"./ButtonBase-B9dD5NpA.js";import"./SvgIcon-DnRBQAn1.js";import"./clsx.m-C7bORDfW.js";import"./SvgIcon.classes-CqsHNf3G.js";import"./_commonjsHelpers-gnU0ypJ3.js";import"./Spinner.utils-Cf9G5dKk.js";import"./useForkRef-DJnV46t9.js";function D(e){return C("ESLoadingButton",e)}const g=S("ESLoadingButton",["root","loading","loadingIndicator"]),j=e=>{const{loading:t,classes:o}=e,i=_({root:["root",t&&"loading"],loadingIndicator:["loadingIndicator"]},D,o);return{...o,...i}},N=e=>e!=="ownerState"&&e!=="theme"&&e!=="sx"&&e!=="as"&&e!=="classes",W=b(P,{shouldForwardProp:e=>N(e)||e==="classes",name:"ESLoadingButton",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:{loading:o}}=e;return[t.root,o&&t.loading]}})(()=>({[`&.${g.loading}.${f.root}.${E.disabled}`]:{"--text":"transparent"},[`&.${g.loading}.${f.root}`]:{"--icon":"transparent"}})),$=b("span",{name:"ESLoadingButton",slot:"LoadingIndicator",overridesResolver:(e,t)=>t.loadingIndicator})(({theme:e})=>({position:"absolute",visibility:"visible",display:"flex",left:"50%",top:"50%",transform:"translate(-50%, -50%)",[`& .${V.root}`]:{color:e.vars.palette.monoA.A500}})),l=e=>{switch(e){case"100":return 10;case"200":return 12;case"300":case"400":return 16;default:return 24}},d=z.forwardRef(function(t,o){const{children:u,classes:i,id:I,disabled:B=!1,loading:r=!1,loadingIndicator:x,...c}=q({props:t,name:"ESLoadingButton"}),p=R(I),w=x??a.jsx(T,{"aria-labelledby":p,size:l(c.size)}),m=j({classes:i,loading:r}),L=r?a.jsx($,{className:m.loadingIndicator,children:w}):null;return a.jsxs(W,{ref:o,disabled:B||r,id:p,...c,classes:m,children:[u,L]})});try{l.displayName="getLoadingButtonSpinnerSize",l.__docgenInfo={description:"",displayName:"getLoadingButtonSpinnerSize",props:{}}}catch{}try{d.displayName="LoadingButton",d.__docgenInfo={description:"LoadingButton shows loading state and disables interactions.",displayName:"LoadingButton",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<ButtonClasses> & LoadingButtonClasses & Partial<ClassNameMap<never>>)"}},loading:{defaultValue:{value:"false"},description:"If `true`, the loading indicator is shown and the button becomes disabled.",name:"loading",required:!1,type:{name:"boolean"}},loadingIndicator:{defaultValue:null,description:'Element placed before the children if the button is in loading state.\nThe node should contain an element with `role="progressbar"` with an accessible name.\nBy default we render a `SpinnerFadingDots` that is labelled by the button itself.',name:"loadingIndicator",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},color:{defaultValue:{value:"'primary'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).`,name:"color",required:!1,type:{name:"enum",value:[{value:'"black"'},{value:'"white"'},{value:'"primary"'},{value:'"secondary"'},{value:'"error"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'},{value:'"monoA"'},{value:'"monoB"'},{value:'"tertiary"'}]}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.\nIf true, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'500'"},description:"The size of the component.\n`small` is equivalent to the dense button styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"100"'},{value:'"200"'},{value:'"300"'},{value:'"400"'},{value:'"500"'},{value:'"600"'},{value:'"700"'},{value:'"800"'},{value:'"900"'},{value:'"1000"'}]}},variant:{defaultValue:{value:"'text'"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"outlined"'},{value:'"contained"'}]}},startIcon:{defaultValue:null,description:"Element placed before the children.",name:"startIcon",required:!1,type:{name:"ReactNode"}},endIcon:{defaultValue:null,description:"Element placed after the children.",name:"endIcon",required:!1,type:{name:"ReactNode"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the button will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:null,description:"If true, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the touch ripple component.",name:"TouchRippleProps",required:!1,type:{name:'Partial<Pick<TouchRippleParams, "center" | "pressGrowDuration" | "minimumPressDuration">>'}},rounded:{defaultValue:{value:"false"},description:"If `true`, the component is rounded.",name:"rounded",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}}}}}catch{}const oe={tags:["autodocs"],title:"LoadingButton",parameters:{references:["LoadingButton"]},argTypes:{variant:{options:["text","outlined","contained"],control:{type:"select"}},color:{options:["inherit","primary","secondary","tertiary","error","success","monoA","monoB","white","black"],control:{type:"select"}},size:{options:["16","20","24","32","40","48","56"],control:{type:"select"}},disabled:{control:{type:"boolean"}},loading:{control:{type:"boolean"}}}},s={render:(e,t)=>{const o=e.size==="100"?a.jsx(n,{size:"12px"}):e.size==="200"?a.jsx(n,{size:"16px"}):e.size==="300"?a.jsx(n,{size:"20px"}):a.jsx(n,{});return a.jsx(d,{color:"primary",...e,endIcon:o,children:t.globals.locale==="en"?"Button":"Кнопка"})}};var h,v,y;s.parameters={...s.parameters,docs:{...(h=s.parameters)==null?void 0:h.docs,source:{originalSource:`{
  render: (args, context) => {
    const icon = args.size === '100' ? <IconChevronDownW400 size="12px" /> : args.size === '200' ? <IconChevronDownW400 size="16px" /> : args.size === '300' ? <IconChevronDownW400 size="20px" /> : <IconChevronDownW400 />;
    return <LoadingButton color="primary" {...args} endIcon={icon}>
        {context.globals.locale === 'en' ? 'Button' : 'Кнопка'}
      </LoadingButton>;
  }
}`,...(y=(v=s.parameters)==null?void 0:v.docs)==null?void 0:y.source}}};const ae=["Demo"];export{s as Demo,ae as __namedExportsOrder,oe as default};

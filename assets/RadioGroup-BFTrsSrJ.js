import{j as l}from"./jsx-runtime-BoZ7yaty.js";import{r as o}from"./index-DIDRz_s2.js";import{a as R}from"./Radio-DrHuIEuh.js";import{u as V}from"./useControlled-BX5XFdR0.js";import{u as x}from"./useForkRef-Cmn-Dh7x.js";import{u as C}from"./useId-DHFVogFr.js";import{F as _}from"./FormGroup-CGRE8RbL.js";const u=o.forwardRef(function(i,d){const{children:p,defaultValue:c,name:m,onChange:e,value:f,...h}=i,v=o.useRef(null),[t,r]=V({controlled:f,default:c,name:"RadioGroup"}),g=x(d,v),n=C(m),y=o.useMemo(()=>({name:n,onChange(a){r(a.target.value),e&&e(a,a.target.value)},value:t}),[n,e,r,t]);return l.jsx(R.Provider,{value:y,children:l.jsx(_,{ref:g,role:"radiogroup",...h,children:p})})});try{u.displayName="RadioGroup",u.__docgenInfo={description:"",displayName:"RadioGroup",props:{name:{defaultValue:null,description:`The name used to reference the value of the control.
If you don't provide this prop, it falls back to a randomly generated name.`,name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:`Callback fired when a radio button is selected.
@param event The event source of the callback.
@param value The value of the selected radio button.
You can pull out the new value by accessing \`event.target.value\` (string).`,name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, value: string) => void)"}},defaultValue:{defaultValue:null,description:"The default value. Use when the component is not controlled.",name:"defaultValue",required:!1,type:{name:"any"}},value:{defaultValue:null,description:"Value of the selected radio button. The DOM API casts this to a string.",name:"value",required:!1,type:{name:"any"}}}}}catch{}export{u as R};

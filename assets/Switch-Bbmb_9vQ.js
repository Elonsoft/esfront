import{j as d}from"./jsx-runtime-BoZ7yaty.js";import{c as q}from"./clsx.m-C7bORDfW.js";import{g as V,a as R,s as c,c as T}from"./styled-QckRPC_l.js";import{u as E}from"./DefaultPropsProvider-BgzOhfjl.js";import{u as z}from"./useControlled-DdQm0pQX.js";import{B as N}from"./ButtonBase-BtCzZW19.js";function X(e){return R("ESSwitch",e)}const t=V("ESSwitch",["root","checked","track","input","thumb","button","disabled","large","medium","small","indeterminate"]),_=e=>{const{classes:a,checked:o,disabled:s,size:r,indeterminate:n}=e;return T({root:["root",o&&"checked",s&&"disabled",r&&r,n&&"indeterminate"],track:["track"],input:["input"],thumb:["thumb"],button:["button"]},X,a)},j=c("div",{name:"ESSwitch",slot:"Root",overridesResolver:(e,a)=>{const{ownerState:{disabled:o,checked:s,indeterminate:r,size:n}}=e;return[a.root,o&&a.disabled,s&&a.checked,r&&a.indeterminate,a[n]]}})(({theme:e})=>({position:"relative",display:"inline-flex",alignItems:"center",justifyContent:"center",zIndex:0,color:e.vars.palette.monoA.A500,[`&.${t.checked}`]:{color:e.vars.palette.primary[300],[`& .${t.input}`]:{transform:"translateX(-12px)"},[`&.${t.large}`]:{[`& .${t.input}`]:{transform:"translateX(-16px)"},[`& .${t.button}`]:{transform:"translateX(16px)"}},[`& .${t.button}`]:{transform:"translateX(12px)","&:hover":{"--background":e.vars.palette.primary.A50,"@media (hover: none)":{"--background":"transparent"}},"--pressed":e.vars.palette.primary.A150}},[`&.${t.indeterminate}`]:{color:e.vars.palette.primary[300],[`&.${t.large}`]:{[`& .${t.button}`]:{transform:"translateX(8px)",padding:"17.5px 13px","&:not(:disabled):has(:focus-visible)":{[`& .${t.thumb}`]:{outlineOffset:0}}},[`& .${t.thumb}`]:{width:"14px",height:"5px",borderRadius:"2.5px",borderColor:"transparent"},[`& .${t.input}`]:{transform:"translateX(-8px)"}},[`&.${t.medium}`]:{[`& .${t.button}`]:{transform:"translateX(6px)",padding:"16px 12px","&:not(:disabled):has(:focus-visible)":{[`& .${t.thumb}`]:{outlineOffset:0}}},[`& .${t.thumb}`]:{width:"12px",height:"4px",borderRadius:"2px",borderColor:"transparent"},[`& .${t.input}`]:{transform:"translateX(-6px)"}},[`&.${t.small}`]:{[`& .${t.button}`]:{transform:"translateX(6px)"},[`& .${t.input}`]:{transform:"translateX(-6px)"}},[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.primary.A50,"@media (hover: none)":{"--background":"transparent"}},"--pressed":e.vars.palette.primary.A150}},variants:[{props:{color:"secondary"},style:{[`&.${t.checked}`]:{color:e.vars.palette.secondary[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.secondary.A50},"--pressed":e.vars.palette.secondary.A150}},[`&.${t.indeterminate}`]:{color:e.vars.palette.secondary[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.secondary.A50},"--pressed":e.vars.palette.secondary.A150}}}},{props:{color:"error"},style:{[`&.${t.checked}`]:{color:e.vars.palette.error[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.error.A50},"--pressed":e.vars.palette.error.A150}},[`&.${t.indeterminate}`]:{color:e.vars.palette.error[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.error.A50},"--pressed":e.vars.palette.error.A150}}}},{props:{color:"info"},style:{[`&.${t.checked}`]:{color:e.vars.palette.info[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.info.A50},"--pressed":e.vars.palette.info.A150}},[`&.${t.indeterminate}`]:{color:e.vars.palette.info[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.info.A50},"--pressed":e.vars.palette.info.A150}}}},{props:{color:"success"},style:{[`&.${t.checked}`]:{color:e.vars.palette.success[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.success.A50},"--pressed":e.vars.palette.success.A150}},[`&.${t.indeterminate}`]:{color:e.vars.palette.success[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.success.A50},"--pressed":e.vars.palette.success.A150}}}},{props:{color:"warning"},style:{[`&.${t.checked}`]:{color:e.vars.palette.warning[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.warning.A50},"--pressed":e.vars.palette.warning.A150}},[`&.${t.indeterminate}`]:{color:e.vars.palette.warning[300],[`& .${t.button}`]:{"&:hover":{"--background":e.vars.palette.warning.A50},"--pressed":e.vars.palette.warning.A150}}}}],[`&.${t.disabled}`]:{opacity:"0.3",cursor:"not-allowed"},[`&.${t.large}`]:{height:"36px",width:"56px",[`& .${t.track}`]:{borderRadius:"20px",width:"38px",height:"24px"},[`& .${t.input}`]:{width:"56px"},[`& .${t.thumb}`]:{width:"24px",height:"24px"}},[`&.${t.medium}`]:{height:"36px",width:"48px",[`& .${t.track}`]:{width:"32px",height:"14px"},[`& .${t.input}`]:{width:"48px"},[`& .${t.thumb}`]:{width:"20px",height:"20px"}},[`&.${t.small}`]:{height:"32px",width:"46px",[`& .${t.track}`]:{width:"28px",height:"4px"},[`& .${t.input}`]:{width:"46px"},[`& .${t.button}`]:{left:"1px"},[`& .${t.thumb}`]:{width:"16px",height:"16px"}}})),O=c("div",{name:"ESSwitch",slot:"Track",overridesResolver:(e,a)=>a.track})(()=>({borderRadius:"8px",backgroundColor:"currentColor",zIndex:-1})),P=c("div",{name:"ESSwitch",slot:"Thumb",overridesResolver:(e,a)=>a.thumb})(({theme:e})=>({backgroundColor:e.vars.palette.common.switch,border:"2px solid currentColor",borderRadius:"50%",transition:`${e.transitions.duration.shortest}ms`,transitionProperty:"width, height, border, border-radius"})),B=c(N,{name:"ESSwitch",slot:"Button",overridesResolver:(e,a)=>a.button})(({theme:e})=>({borderRadius:"50%",padding:"8px",left:0,zIndex:1,position:"absolute",transition:`${e.transitions.duration.shortest}ms`,"--text":"currentColor","--hovered":e.vars.palette.monoA.A50,"--pressed":e.vars.palette.monoA.A150,"&:not(:disabled):has(:focus-visible)":{[`& .${t.thumb}`]:{outline:`2px solid ${e.vars.palette.monoA[500]}`,outlineOffset:"-2px"}},"@media (hover: none)":{"--background":"transparent"}})),D=c("input",{name:"ESSwitch",slot:"Input",overridesResolver:(e,a)=>a.input})(()=>({cursor:"inherit",position:"absolute",opacity:0,height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1})),g=e=>{const{className:a,checked:o,indeterminate:s,onChange:r,type:n="checkbox",disabled:p,defaultChecked:m,color:x="secondary",size:y="medium",autoFocus:k,id:$,name:v,readOnly:h,value:w,sx:S,...A}=E({props:e,name:"ESSwitch"}),[u,f]=z(m,o),b={...A,disabled:p,color:x,indeterminate:s,checked:!s&&u,size:y},i=_(b),C=l=>{h||(f(l.target.checked),r&&r(l))},I=l=>{!h&&l.key==="Enter"&&(l.preventDefault(),f(!u),r&&r({target:{name:v,checked:!u}}))};return d.jsxs(j,{className:q(i.root,a),ownerState:b,sx:S,children:[d.jsxs(B,{disableTouchRipple:!0,className:i.button,component:"span",disabled:p,tabIndex:-1,children:[d.jsx(D,{autoFocus:k,checked:!!u,className:i.input,defaultChecked:m,disabled:p,id:$,name:v,readOnly:h,type:"checkbox",value:w,onChange:C,onKeyDown:n==="button"?I:void 0}),d.jsx(P,{className:i.thumb})]}),d.jsx(O,{className:i.track})]})};try{g.displayName="Switch",g.__docgenInfo={description:"Switches toggle the state of a single setting on or off.",displayName:"Switch",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SwitchClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}},indeterminate:{defaultValue:null,description:"If `true`, the component appears indeterminate.",name:"indeterminate",required:!1,type:{name:"boolean"}},color:{defaultValue:{value:"'secondary'"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"warning"'},{value:'"error"'},{value:'"info"'},{value:'"secondary"'},{value:'"primary"'}]}},type:{defaultValue:{value:"'checkbox'"},description:"If 'button', hitting enter will toggle the switch.",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"checkbox"'}]}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},disabled:{defaultValue:null,description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"The default checked state. Use when the component is not controlled.",name:"defaultChecked",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"If `true`, the `input` element is focused during the first mount.",name:"autoFocus",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"The name of the `input` element.",name:"name",required:!1,type:{name:"string"}},readOnly:{defaultValue:null,description:"It prevents the user from changing the value of the field",name:"readOnly",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"The value of the component. The DOM API casts this to a string.",name:"value",required:!1,type:{name:"any"}}}}}catch{}export{g as S,t as s};

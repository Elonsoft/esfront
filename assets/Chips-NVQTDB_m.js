import{j as a}from"./jsx-runtime-BoZ7yaty.js";import{r as c}from"./index-DIDRz_s2.js";import{c as $}from"./clsx.m-C7bORDfW.js";import{g as j,a as z,s as g,c as A}from"./styled-B0X8gopH.js";import{u as L}from"./useThemeProps-DTzdApbH.js";import{I as U,a as P}from"./IconChevronUpW200-HFZS3nM5.js";import{u as O}from"./useBoolean-Fgx-l6SR.js";import{u as G}from"./useResizeObserver-BNbozrrH.js";import{u as k}from"./useEnhancedEffect-BGNjlb7u.js";import{c as D}from"./Chip-Cf96_P4e.js";import{B as M,b}from"./Button-Bw7cy9Im.js";import{b as F}from"./ButtonBase-C33Z4or-.js";function J(e){return z("ESChips",e)}const K=j("ESChips",["root","button"]),Q=e=>{const{classes:t}=e;return A({root:["root"],button:["button"]},J,t)},X=g("div",{name:"ESChips",slot:"Root",overridesResolver:(e,t)=>t.root})({display:"flex",flexWrap:"wrap",gap:"8px",position:"relative"}),Y=g(M,{name:"ESChips",slot:"Button",overridesResolver:(e,t)=>t.button})(({theme:e})=>({borderRadius:"1000px",[`&.${b.size300}.${b.variantText}`]:{"--text":e.vars.palette.monoA.A550,"--icon":e.vars.palette.monoA.A500,[`.${F.wrapper}`]:{...e.typography.caption}}})),S=e=>{const{className:t,classes:p,children:w,sx:v,maxLines:u=1,labelHide:R,labelShow:E,iconHide:q=a.jsx(U,{container:!0,containerSize:"16px"}),iconShow:N=a.jsx(P,{container:!0,containerSize:"16px"}),..._}=L({props:e,name:"ESChips"}),s=c.useRef(null),[o,B]=O(!1),[I,d]=c.useState(!1),[V,H]=c.useState(0),m=u<1?1:u,h=()=>{if(!s.current)return;const C=s.current.querySelectorAll(`.${D.root}`);if(C.forEach(n=>n.style.removeProperty("display")),!o){let n=1,y=0,r=0;const T=s.current.getBoundingClientRect().width,i=parseInt(window.getComputedStyle(s.current).columnGap),W=s.current.querySelector(`.${K.button}`).getBoundingClientRect().width;d(!1),C.forEach(x=>{const l=x.getBoundingClientRect().width;r+i+l+(n>=m?i+W:0)>=T?(n+=1,r=l):r+=l+i,n>m&&(d(!0),x.style.display="none",y+=1)}),H(y)}},f=Q({classes:p});return G(s,h),k(()=>{h()},[o]),a.jsxs(X,{ref:s,className:$(f.root,t),sx:v,..._,children:[w,a.jsx(Y,{"aria-label":o?void 0:E,className:f.button,color:"monoA",endIcon:o?q:N,size:"300",style:{display:I?"flex":"none"},onClick:B,children:o?R:`+${V}`},`${o}`)]})};try{S.displayName="Chips",S.__docgenInfo={description:"",displayName:"Chips",props:{className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ChipsClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},maxLines:{defaultValue:{value:"1"},description:"The amount of visible lines.",name:"maxLines",required:!1,type:{name:"number"}},labelHide:{defaultValue:null,description:"Text for the hide button.",name:"labelHide",required:!1,type:{name:"ReactNode"}},labelShow:{defaultValue:null,description:"Text for the show button aria-label.",name:"labelShow",required:!1,type:{name:"string"}},iconHide:{defaultValue:null,description:"Icon for the hide button.",name:"iconHide",required:!1,type:{name:"ReactNode"}},iconShow:{defaultValue:null,description:"Icon for the show button.",name:"iconShow",required:!1,type:{name:"ReactNode"}}}}}catch{}export{S as C,K as c};

import{j as k}from"./jsx-runtime-BoZ7yaty.js";import{r as M}from"./index-DIDRz_s2.js";import{c as z}from"./clsx.m-C7bORDfW.js";import{g as D,a as Y,s as S,c as G}from"./generateUtilityClasses-D4qQEpRV.js";import{b as J,c as v}from"./useThemeProps-DJft-tfL.js";import{u as K}from"./useControlled-DdQm0pQX.js";import{u as Q}from"./useFormControl-Crkhef2u.js";import{B as W,b as X}from"./ButtonBase-B9dD5NpA.js";function Z(e){return Y("ESSwitchBase",e)}const w=D("ESSwitchBase",["root","checked","disabled","input","edgeStart","edgeEnd"]),ee=e=>{const{classes:t,checked:i,disabled:s,edge:l}=e,r={root:["root",i&&"checked",s&&"disabled",l&&`edge${v(l)}`],input:["input"]};return G(r,Z,t)},te=S(W,{name:"ESSwitchBase",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:{disabled:i,edge:s,checked:l}}=e;return[t.root,l&&t.checked,i&&t.disabled,s&&t[`edge${v(s)}`]]}})(({theme:e})=>({padding:9,borderRadius:"50%",[`&.${w.edgeStart}`]:{marginLeft:-12},[`&.${w.edgeEnd}`]:{marginRight:-12},[`&:not(.${X.disabled}):has(:focus-visible)`]:{outline:`2px solid ${e.vars.palette.monoA[500]}`,outlineOffset:"-2px"}})),ae=S("input",{name:"ESSwitchBase",slot:"Input",overridesResolver:(e,t)=>t.input})({cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}),q=M.forwardRef(function(t,i){const{classes:s,autoFocus:l,checked:r,checkedIcon:R,className:C,defaultChecked:u,disabled:B,disableFocusRipple:c=!1,edge:I=!1,icon:V,id:x,inputProps:P,inputRef:T,name:E,onBlur:p,onChange:f,onFocus:m,readOnly:F,required:N=!1,tabIndex:_,type:d,value:L,...$}=J({props:t,name:"ESSwitchBase"}),[h,O]=K(!!u,r),n=Q(),U=a=>{m&&m(a),n&&n.onFocus&&n.onFocus(a)},j=a=>{p&&p(a),n&&n.onBlur&&n.onBlur(a)},A=a=>{if(a.nativeEvent.defaultPrevented)return;const g=a.target.checked;O(g),f&&f(a,g)};let o=B;n&&typeof o>"u"&&(o=n.disabled);const H=d==="checkbox"||d==="radio",b={classes:s,checked:h,disabled:o,disableFocusRipple:c,edge:I},y=ee(b);return k.jsxs(te,{ref:i,centerRipple:!0,className:z(y.root,C),component:"span",disabled:o,focusRipple:!c,ownerState:b,role:void 0,tabIndex:null,onBlur:j,onFocus:U,...$,children:[k.jsx(ae,{ref:T,autoFocus:l,checked:r,className:y.input,defaultChecked:u,disabled:o,id:H?x:void 0,name:E,readOnly:F,required:N,tabIndex:_,type:d,value:L,onChange:A,...P}),h?R:V]})});try{q.displayName="SwitchBase",q.__docgenInfo={description:"",displayName:"SwitchBase",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SwitchBaseClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},defaultChecked:{defaultValue:null,description:"The default checked state. Use when the component is not controlled.",name:"defaultChecked",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.\n@param event The event source of the callback.\nYou can pull out the new value by accessing `event.target.value` (string).\nYou can pull out the new checked state by accessing `event.target.checked` (boolean).",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, checked: boolean) => void)"}},disabled:{defaultValue:null,description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"ReactNode"}},checkedIcon:{defaultValue:null,description:"",name:"checkedIcon",required:!0,type:{name:"ReactNode"}},disableTouchRipple:{defaultValue:null,description:"If true, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the touch ripple component.",name:"TouchRippleProps",required:!1,type:{name:'Partial<Pick<TouchRippleParams, "center" | "pressGrowDuration" | "minimumPressDuration">>'}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},edge:{defaultValue:{value:"false"},description:`If given, uses a negative margin to counteract the padding on one
side (this is often helpful for aligning the left or right
side of the icon with content above or below, without ruining the border
size and shape).`,name:"edge",required:!1,type:{name:'false | "end" | "start"'}},inputProps:{defaultValue:null,description:"[Attributes] applied to the `input` element.",name:"inputProps",required:!1,type:{name:"InputHTMLAttributes<HTMLInputElement>"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"Ref<any>"}}}}}catch{}export{q as S,w as s};

import{j as a}from"./jsx-runtime-BoZ7yaty.js";import{r as E}from"./index-DIDRz_s2.js";import{c as S}from"./clsx.m-C7bORDfW.js";import{g as j,c as t}from"./Checkbox.classes-Di0bQe5l.js";import{u as P}from"./DefaultPropsProvider-BgzOhfjl.js";import{g as B,a as D,s as _,c as H,e as c}from"./styled-QckRPC_l.js";import{S as p}from"./SvgIcon-DcWEUr91.js";import{S as W}from"./SwitchBase-B94b24U2.js";function O(e){return D("ESCheckboxIcon",e)}const r=B("ESCheckboxIcon",["root"]),U=e=>{const{classes:n}=e;return H({root:["root"]},O,n)},G=_("div",{name:"ESCheckboxIcon",slot:"Root",overridesResolver:(e,n)=>n.root})(({theme:e})=>({boxShadow:`inset 0 0 0 2px ${e.vars.palette.monoA.A600}`,borderRadius:"6px",display:"flex",alignItems:"center",justifyContent:"center"})),l=e=>{const{className:n,sx:i,...s}=P({props:e,name:"ESCheckboxIcon"}),o={...s},u=U(o);return a.jsx(G,{className:S(u.root,n),ownerState:o,sx:i,...s})};try{l.displayName="CheckboxIcon",l.__docgenInfo={description:"",displayName:"CheckboxIcon",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CheckboxIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}const y=e=>a.jsx(p,{fill:"none",height:"24",viewBox:"0 0 24 24",width:"24",...e,children:a.jsx("path",{d:"M16.7992 9L10.7992 15L7.19922 11.4",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2.6"})});try{y.displayName="IconCheckLarge",y.__docgenInfo={description:"",displayName:"IconCheckLarge",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}}}catch{}const w=e=>a.jsx(p,{fill:"none",height:"20",viewBox:"0 0 20 20",width:"20",...e,children:a.jsx("path",{d:"M14 7.5L9 12.5L6 9.5",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2"})});try{w.displayName="IconCheckMedium",w.__docgenInfo={description:"",displayName:"IconCheckMedium",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}}}catch{}const b=e=>a.jsx(p,{fill:"none",height:"16",viewBox:"0 0 16 16",width:"16",...e,children:a.jsx("path",{d:"M11.131 6.37012L7.50092 10.0001L5.16602 7.66382",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2"})});try{b.displayName="IconCheckSmall",b.__docgenInfo={description:"",displayName:"IconCheckSmall",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}}}catch{}const x=e=>a.jsx(p,{fill:"none",height:"24",viewBox:"0 0 24 24",width:"24",...e,children:a.jsx("path",{d:"M7 12H17",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2.6"})});try{x.displayName="IconIndeterminateLarge",x.__docgenInfo={description:"",displayName:"IconIndeterminateLarge",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}}}catch{}const k=e=>a.jsx(p,{fill:"none",height:"20",viewBox:"0 0 20 20",width:"20",...e,children:a.jsx("path",{d:"M6 10H14",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2"})});try{k.displayName="IconIndeterminateMedium",k.__docgenInfo={description:"",displayName:"IconIndeterminateMedium",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}}}catch{}const $=e=>a.jsx(p,{fill:"none",height:"16",viewBox:"0 0 16 16",width:"16",...e,children:a.jsx("path",{d:"M5 8H11",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2"})});try{$.displayName="IconIndeterminateSmall",$.__docgenInfo={description:"",displayName:"IconIndeterminateSmall",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}}}catch{}const F=e=>{const{classes:n,indeterminate:i,color:s,size:o,checked:u,disabled:m,variant:f,error:v}=e,d={root:["root",i&&"indeterminate",u&&"checked",m&&"disabled",v&&"error",`color${c(s)}`,`size${c(o)}`,`variant${c(f)}`],container:["container"]},h=H(d,j,n);return{...n,...h}},Y=e=>e!=="ownerState"&&e!=="theme"&&e!=="sx"&&e!=="as"&&e!=="classes",J=_(W,{shouldForwardProp:e=>Y(e)||e==="classes",name:"ESCheckbox",slot:"Root",overridesResolver:(e,n)=>{const{ownerState:i}=e;return[n.root,i.indeterminate&&n.indeterminate,i.checked&&n.checked,i.disabled&&n.disabled,i.error&&n.error,n[`size${c(i.size)}`],n[`color${c(i.color)}`],n[`variant${c(i.variant)}`]]}})(({theme:e})=>({"& svg":{borderRadius:"6px","& path":{stroke:"transparent"}},"@media (hover: hover)":{[`&:not(.${t.checked}):not(.${t.disabled}):not(.${t.indeterminate})`]:{"&:hover":{"& svg":{"& path":{stroke:e.vars.palette.monoA.A400}}},"&:active":{"& svg":{"& path":{stroke:e.vars.palette.monoA.A600}}}}},[`&.${t.sizeLarge}`]:{padding:"8px",[`& .${r.root}`]:{borderRadius:"6px",height:"22px",width:"22px",margin:"1px"},"& svg":{fontSize:"24px",height:"24px !important",width:"24px !important"}},[`&.${t.sizeMedium}`]:{padding:"8px",[`& .${r.root}`]:{borderRadius:"4px",height:"18px",width:"18px",margin:"1px"},"& svg":{fontSize:"20px",height:"20px !important",width:"20px !important"}},[`&.${t.sizeSmall}`]:{padding:"10px",[`& .${r.root}`]:{borderRadius:"4px",height:"14px",width:"14px",margin:"1px"},"& svg":{fontSize:"16px",height:"16px !important",width:"16px !important"}},[`&.${t.variantOutlined}, &.${t.variantHybrid}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 1px ${e.vars.palette.monoA.A500}`}},[`&.${t.checked}, &.${t.indeterminate}`]:{[`&.${t.variantContained}, &.${t.variantHybrid}`]:{"& svg":{"& path":{stroke:e.vars.palette.monoB[500]}},[`& .${r.root}`]:{background:"currentColor",boxShadow:"none"}},[`&.${t.variantOutlined}`]:{"& svg":{"& path":{stroke:"currentColor"}}}},background:"transparent",color:e.vars.palette.monoA.A600,"--hovered":e.vars.palette.monoA.A50,"--pressed":e.vars.palette.monoA.A150,[`&.${t.disabled}`]:{cursor:"not-allowed",pointerEvents:"auto",opacity:"30%"},[`&.${t.colorSuccess}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.success[300],"--hovered":e.vars.palette.success.A50,"--pressed":e.vars.palette.monoA.A150}},[`&.${t.colorMonoB}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{[`&.${t.variantContained}, &.${t.variantHybrid}`]:{"& path":{stroke:e.vars.palette.monoA[500]}},color:e.vars.palette.monoB[500],"--hovered":e.vars.palette.monoB.A50,"--pressed":e.vars.palette.monoB.A150},color:e.vars.palette.monoB.A600,"--hovered":e.vars.palette.monoB.A50,"--pressed":e.vars.palette.monoB.A150,[`&:not(.${t.checked}):not(.${t.indeterminate})`]:{[`&.${t.variantContained}, &.${t.variantHybrid}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 2px ${e.vars.palette.monoB.A600}`}}},[`&.${t.variantOutlined}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 1px ${e.vars.palette.monoB.A600}`}},"@media (hover: hover)":{[`&:not(.${t.checked}):not(.${t.disabled}):not(.${t.indeterminate})`]:{"&:hover":{"& svg":{"& path":{stroke:e.vars.palette.monoB.A400}}},"&:active":{"& svg":{"& path":{stroke:e.vars.palette.monoB.A600}}}}},"&:focus":{backgroundColor:e.vars.palette.monoB.A200},"&:active":{backgroundColor:e.vars.palette.monoB.A150}},[`&.${t.colorBlack}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.black[500],"--hovered":e.vars.palette.black.A50,"--pressed":e.vars.palette.black.A150,[`&.${t.variantContained}, &.${t.variantHybrid}`]:{"& svg":{"& path":{stroke:e.vars.palette.white[500]}}}},color:e.vars.palette.black.A600,"--hovered":e.vars.palette.black.A50,"--pressed":e.vars.palette.black.A150,[`&:not(.${t.checked}):not(.${t.indeterminate})`]:{color:e.vars.palette.black[500],"--hovered":e.vars.palette.black.A50,"--pressed":e.vars.palette.black.A150,[`&.${t.variantContained}, &.${t.variantHybrid}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 2px ${e.vars.palette.black.A600}`}}},[`&.${t.variantOutlined}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 1px ${e.vars.palette.black.A600}`}},"@media (hover: hover)":{[`&:not(.${t.checked}):not(.${t.disabled}):not(.${t.indeterminate})`]:{"&:hover":{"& svg":{"& path":{stroke:e.vars.palette.black.A400}}},"&:active":{"& svg":{"& path":{stroke:e.vars.palette.black.A600}}}}},"&:focus":{backgroundColor:e.vars.palette.black.A200},"&:active":{backgroundColor:e.vars.palette.black.A150}},[`&.${t.colorWhite}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.white[500],"--hovered":e.vars.palette.white.A50,"--pressed":e.vars.palette.white.A150,[`&.${t.variantContained}, &.${t.variantHybrid}`]:{"& svg":{"& path":{stroke:e.vars.palette.black[500]}}}},[`&:not(.${t.checked}):not(.${t.indeterminate})`]:{color:e.vars.palette.white[500],"--hovered":e.vars.palette.white.A50,"--pressed":e.vars.palette.white.A150,[`&.${t.variantContained}, &.${t.variantHybrid}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 2px ${e.vars.palette.white.A600}`}}},[`&.${t.variantOutlined}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 1px ${e.vars.palette.white.A600}`}},"@media (hover: hover)":{[`&:not(.${t.checked}):not(.${t.disabled}):not(.${t.indeterminate})`]:{"&:hover":{"& svg":{"& path":{stroke:e.vars.palette.white.A400}}},"&:active":{"& svg":{"& path":{stroke:e.vars.palette.white.A600}}}}},"&:focus":{backgroundColor:e.vars.palette.white.A200},"&:active":{backgroundColor:e.vars.palette.white.A150}},[`&.${t.colorMonoA}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.monoA[500],"--hovered":e.vars.palette.monoA.A50,"--pressed":e.vars.palette.monoA.A150},[`&:not(.${t.checked}):not(.${t.indeterminate})`]:{[`&.${t.variantContained}, &.${t.variantHybrid}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 2px ${e.vars.palette.monoA.A600}`}}},[`&.${t.variantOutlined}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 1px ${e.vars.palette.monoA.A600}`}}},[`&.${t.colorPrimary}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.primary[300],"--hovered":e.vars.palette.primary.A50,"--pressed":e.vars.palette.primary.A150}},[`&.${t.colorSecondary}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.secondary[300],"--hovered":e.vars.palette.secondary.A50,"--pressed":e.vars.palette.secondary.A150}},[`&.${t.colorWarning}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.warning[300],"--hovered":e.vars.palette.warning.A50,"--pressed":e.vars.palette.warning.A150}},[`&.${t.colorError}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.error[300],"--hovered":e.vars.palette.error.A50,"--pressed":e.vars.palette.error.A150}},[`&.${t.colorInfo}`]:{[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.info[300],"--hovered":e.vars.palette.info.A50,"--pressed":e.vars.palette.info.A150}},[`&.${t.error}`]:{color:e.vars.palette.error[300],"--hovered":e.vars.palette.error.A50,"--pressed":e.vars.palette.error.A150,[`&.${t.checked}, &.${t.indeterminate}`]:{color:e.vars.palette.error[300],"--hovered":e.vars.palette.error.A50,"--pressed":e.vars.palette.error.A150,[`&.${t.variantContained}, &.${t.variantHybrid}`]:{"& svg":{"& path":{stroke:e.vars.palette.monoB[500]}}}},[`&:not(.${t.checked}):not(.${t.indeterminate})`]:{[`&.${t.variantContained}, &.${t.variantHybrid}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 2px ${e.vars.palette.error[300]}`}}},[`&.${t.variantOutlined}`]:{[`& .${r.root}`]:{boxShadow:`inset 0 0 0 1px ${e.vars.palette.error[300]}`}},"&:focus":{backgroundColor:e.vars.palette.error.A200},"&:active":{backgroundColor:e.vars.palette.error.A150}}})),g={large:a.jsx(l,{children:a.jsx(y,{})}),medium:a.jsx(l,{children:a.jsx(w,{})}),small:a.jsx(l,{children:a.jsx(b,{})})},K={large:a.jsx(l,{children:a.jsx(x,{})}),medium:a.jsx(l,{children:a.jsx(k,{})}),small:a.jsx(l,{children:a.jsx($,{})})},A=E.forwardRef(function(n,i){const s=P({props:n,name:"ESCheckbox"}),{size:o="medium",variant:u="contained",color:m="primary",checkedIcon:f=g[o],icon:v=g[o],indeterminate:d=!1,indeterminateIcon:h=K[o],iconMapping:q=g,inputProps:z,className:L,checked:V,disabled:C,...M}=s,N=d?h:v??q[o],R=d?h:f??q[o],T={...s,color:m,indeterminate:d,size:o,checked:V,disabled:C,variant:u},I=F(T);return a.jsx(J,{ref:i,TouchRippleProps:{center:!0},checked:V,checkedIcon:R,className:S(I.root,L),disabled:C,icon:N,inputProps:{"data-indeterminate":d,...z},ownerState:T,type:"checkbox",...M,classes:I})});try{A.displayName="Checkbox",A.__docgenInfo={description:"",displayName:"Checkbox",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"warning"'},{value:'"error"'},{value:'"info"'},{value:'"secondary"'},{value:'"primary"'},{value:'"monoA"'},{value:'"monoB"'},{value:'"black"'},{value:'"white"'}]}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CheckboxClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense checkbox styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.\n@param event The event source of the callback.\nYou can pull out the new checked state by accessing `event.target.checked` (boolean).",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},defaultChecked:{defaultValue:null,description:"The default checked state. Use when the component is not controlled.",name:"defaultChecked",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:`The value of the component. The DOM API casts this to a string.
The browser uses "on" as the default value.`,name:"value",required:!1,type:{name:"string | number | readonly string[]"}},checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"If `true`, the component is error.",name:"error",required:!1,type:{name:"boolean"}},variant:{defaultValue:{value:"'contained'"},description:"The variant of the component.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"outlined"'},{value:'"contained"'},{value:'"hybrid"'}]}},iconMapping:{defaultValue:null,description:"The icon to display when the component is unchecked.",name:"iconMapping",required:!1,type:{name:"{ large: ReactNode; medium: ReactNode; small: ReactNode; }"}},icon:{defaultValue:null,description:"The icon to display when the component is unchecked.",name:"icon",required:!1,type:{name:"ReactNode"}},checkedIcon:{defaultValue:null,description:"The icon to display when the component is checked.",name:"checkedIcon",required:!1,type:{name:"ReactNode"}},disableTouchRipple:{defaultValue:null,description:"If true, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the touch ripple component.",name:"TouchRippleProps",required:!1,type:{name:'Partial<Pick<TouchRippleParams, "center" | "pressGrowDuration" | "minimumPressDuration">>'}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},edge:{defaultValue:{value:"false"},description:`If given, uses a negative margin to counteract the padding on one
side (this is often helpful for aligning the left or right
side of the icon with content above or below, without ruining the border
size and shape).`,name:"edge",required:!1,type:{name:'false | "end" | "start"'}},inputProps:{defaultValue:null,description:"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.",name:"inputProps",required:!1,type:{name:"InputHTMLAttributes<HTMLInputElement>"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},indeterminate:{defaultValue:{value:"false"},description:"If `true`, the component appears indeterminate.\nThis does not set the native input element to indeterminate due\nto inconsistent behavior across browsers.\nHowever, we set a `data-indeterminate` attribute on the `input`.",name:"indeterminate",required:!1,type:{name:"boolean"}},indeterminateIcon:{defaultValue:null,description:"The icon to display when the component is indeterminate.",name:"indeterminateIcon",required:!1,type:{name:"ReactNode"}}}}}catch{}export{A as C};

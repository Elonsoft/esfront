import{j as a}from"./jsx-runtime-BoZ7yaty.js";import{r as k}from"./index-DIDRz_s2.js";import{c as H}from"./clsx.m-C7bORDfW.js";import{g as A,a as D,s as r,e as C,c as W}from"./styled-QckRPC_l.js";import{u as L}from"./DefaultPropsProvider-BgzOhfjl.js";import{u as Y}from"./useForkRef-DJnV46t9.js";import{I as Z,a as ee,b as se,c as $}from"./IconInformation2W500-BCqA6URh.js";import{b as p,B as z}from"./Button-CL4pDWwx.js";import{b as B}from"./ButtonBase-BtCzZW19.js";import{s as N}from"./SvgIcon.classes-CE9bwLeY.js";import{I as E}from"./IconCloseW350-D-WsKF4y.js";import"./_commonjsHelpers-gnU0ypJ3.js";import"./SvgIcon-DcWEUr91.js";function ae(e){return D("ESSnackbar",e)}const o=A("ESSnackbar",["root","progress","content","icon","heading","message","actions","severitySuccess","severityWarning","severityError","severityInfo","severityDefault","colorSuccess","colorWarning","colorError","colorInfo","colorMonoA","sizeS","sizeM","sizeL","sizeXl"]),oe=e=>{const{classes:s,severity:i,color:d,size:u}=e,l={root:["root",`severity${C(i)}`,`color${C(d)}`,`size${C(u)}`],progress:["progress"],content:["content"],icon:["icon"],heading:["heading"],message:["message"],actions:["actions"]};return W(l,ae,s)},re=r("div",{name:"ESSnackbar",slot:"Root",overridesResolver:(e,s)=>s.root})(({theme:e})=>({position:"relative",backdropFilter:"blur(25px)",borderRadius:"6px",color:e.vars.palette.monoB[500],overflow:"hidden",variants:[{props:{color:"monoA"},style:{backgroundColor:e.vars.palette.monoA.A800}},{props:{color:"success"},style:{backgroundColor:e.vars.palette.success[300]}},{props:{color:"warning"},style:{backgroundColor:e.vars.palette.warning[300]}},{props:{color:"error"},style:{backgroundColor:e.vars.palette.error[300]}},{props:{color:"info"},style:{backgroundColor:e.vars.palette.info[300]}},{props:{size:"s"},style:{minHeight:"32px",maxWidth:"max-content",[`& .${o.message}`]:{"&:first-of-type":{paddingLeft:"12px"}},[`& .${o.actions}`]:{padding:"4px 4px 4px 8px"}}},{props:{size:"m"},style:{minHeight:"40px",[`& .${o.icon}`]:{padding:"8px 6px 8px 8px"},[`& .${o.message}`]:{"&:first-of-type":{paddingLeft:"12px"}},[`& .${o.actions}`]:{gap:"4px",padding:"4px 4px 4px 16px"}}},{props:{size:"l"},style:{minHeight:"48px",[`& .${o.icon}`]:{padding:"12px 8px 12px 12px"},[`& .${o.message}`]:{"&:first-of-type":{paddingLeft:"12px"}},[`& .${o.actions}`]:{gap:"8px",padding:"8px 8px 8px 16px",[`& .${p.variantText}.${p.colorMonoB}`]:{...e.typography.body100Medium,"--background":e.vars.palette.monoB.A100,"--text":e.vars.palette.monoB[500],[`&.${p.size400} .${B.wrapper}`]:{padding:"0 12px",[`& > .${N.root}`]:{margin:"0 -8px"}}}}}},{props:{size:"xl"},style:{minHeight:"56px",[`& .${o.icon}`]:{padding:"16px 8px 16px 16px"},[`& .${o.message}`]:{"&:first-of-type":{paddingLeft:"16px"}},[`& .${o.actions}`]:{gap:"8px",padding:"12px 12px 12px 16px",[`& .${p.variantText}.${p.colorMonoB}`]:{...e.typography.body100Medium,"--background":e.vars.palette.monoB.A100,"--text":e.vars.palette.monoB[500],[`&.${p.size400} .${B.wrapper}`]:{padding:"0 12px",[`& > .${N.root}`]:{margin:"0 -8px"}}}}}}]})),ne=r("div",{name:"ESSnackbar",slot:"Progress",overridesResolver:(e,s)=>s.progress})(({theme:e})=>({position:"absolute",left:0,top:0,bottom:0,zIndex:1,width:"var(--ESSnackbar-progress, 100%)",transition:"var(--ESSnackbar-transition, none)",backgroundColor:e.vars.palette.monoB.A100})),te=r("div",{name:"ESSnackbar",slot:"Content",overridesResolver:(e,s)=>s.content})({position:"relative",display:"flex",alignItems:"center",zIndex:2}),ie=r("div",{name:"ESSnackbar",slot:"Icon",overridesResolver:(e,s)=>s.icon})({display:"flex"}),le=r("div",{name:"ESSnackbar",slot:"Heading",overridesResolver:(e,s)=>s.heading})(({theme:e})=>({...e.typography.body100Medium,marginBottom:"2px"})),ce=r("div",{name:"ESSnackbar",slot:"Message",overridesResolver:(e,s)=>s.message})(({theme:e})=>({...e.typography.caption,padding:"4px 0",minWidth:0,wordBreak:"break-word",[`&:has(.${o.heading})`]:{paddingBottom:"6px"},"&:first-of-type":{paddingLeft:"12px"}})),pe=r("div",{name:"ESSnackbar",slot:"Actions",overridesResolver:(e,s)=>s.actions})(()=>({alignItems:"center",display:"flex",marginLeft:"auto"})),de={default:"monoA",success:"success",warning:"warning",error:"error",info:"info"},ue={default:a.jsx($,{}),success:a.jsx($,{}),warning:a.jsx(se,{}),error:a.jsx(ee,{}),info:a.jsx(Z,{})},g=k.forwardRef(function(s,i){const{className:d,sx:u,heading:l,message:f,icon:x,autoHideDuration:c,persist:v,progress:m,severity:h="default",color:F,size:R="m",colorMapping:X=de,iconMapping:G=ue,action:I,onClose:j,...J}=L({props:s,name:"ESSnackbar"}),n=k.useRef(null),K=Y(n,i);k.useEffect(()=>{if(!v&&c){setTimeout(()=>{n.current&&(n.current.style.setProperty("--ESSnackbar-transition",`${c}ms linear`),n.current.style.setProperty("--ESSnackbar-progress","0%"))},1);const Q=setTimeout(()=>{j&&j()},c);return()=>{n.current&&(n.current.style.setProperty("--ESSnackbar-transition","none"),n.current.style.setProperty("--ESSnackbar-progress","100%")),clearTimeout(Q)}}},[v,c]);const w={severity:h,color:F||X[h],...J,size:R},t=oe(w);return a.jsxs(re,{ref:K,className:H(t.root,d),ownerState:w,sx:u,children:[m&&a.jsx(ne,{className:t.progress}),a.jsxs(te,{className:t.content,children:[R!=="s"&&x!==!1&&a.jsx(ie,{className:t.icon,children:x||G[h]}),a.jsxs(ce,{className:t.message,children:[!!l&&a.jsx(le,{className:t.heading,children:l}),!!f&&a.jsx("div",{children:f})]}),a.jsx(pe,{className:t.actions,children:!!I&&I})]})]})});try{g.displayName="Snackbar",g.__docgenInfo={description:"Snackbar is used for brief notifications of processes that have been or will be performed.",displayName:"Snackbar",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SnackbarClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},heading:{defaultValue:null,description:"",name:"heading",required:!1,type:{name:"ReactNode"}},message:{defaultValue:null,description:"",name:"message",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"The icon to display.",name:"icon",required:!1,type:{name:"ReactNode"}},action:{defaultValue:null,description:"The action to display. It renders after the message, at the end of the snackbar.",name:"action",required:!1,type:{name:"ReactNode"}},autoHideDuration:{defaultValue:null,description:"",name:"autoHideDuration",required:!1,type:{name:"number"}},persist:{defaultValue:null,description:"Snackbar stays on the screen, unless it is dismissed.",name:"persist",required:!1,type:{name:"boolean"}},progress:{defaultValue:null,description:"If true, the hide progress is shown.",name:"progress",required:!1,type:{name:"boolean"}},severity:{defaultValue:{value:"'default'"},description:"The severity of the snackbar. This defines the color and icon used.",name:"severity",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"success"'},{value:'"warning"'},{value:'"error"'},{value:'"info"'}]}},color:{defaultValue:null,description:"The color of the component. Unless provided, the value is taken from the `severity` prop.",name:"color",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"warning"'},{value:'"error"'},{value:'"info"'},{value:'"monoA"'}]}},size:{defaultValue:{value:"'40'"},description:"The size of the component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"s"'},{value:'"xl"'},{value:'"l"'}]}},colorMapping:{defaultValue:null,description:`The component maps the severity prop to a range of different icons.
If you wish to change this mapping, you can provide your own.`,name:"colorMapping",required:!1,type:{name:"Record<SnackbarPropsSeverity, SnackbarPropsColor>"}},iconMapping:{defaultValue:null,description:`The component maps the severity prop to a range of different icons.
If you wish to change this mapping, you can provide your own.`,name:"iconMapping",required:!1,type:{name:"Record<SnackbarPropsSeverity, ReactNode>"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(() => void)"}}}}}catch{}function me(e){return D("ESSnackbarClose",e)}A("ESSnackbarClose",["root","progress"]);const ge=e=>{const{classes:s}=e;return W({root:["root"],button:["button"],progress:["progress"]},me,s)},fe=r("div",{name:"ESSnackbarClose",slot:"Root",overridesResolver:(e,s)=>s.root})({borderRadius:"4px",overflow:"hidden",position:"relative"}),xe=r(z,{name:"ESSnackbarClose",slot:"Root",overridesResolver:(e,s)=>s.button})({zIndex:1}),ve=r("div",{name:"ESSnackbarClose",slot:"Progress",overridesResolver:(e,s)=>s.progress})(({theme:e})=>({position:"absolute",left:0,top:0,bottom:0,width:"var(--ESSnackbar-progress, 100%)",transition:"var(--ESSnackbar-transition, none)",backgroundColor:e.vars.palette.monoB.A200,zIndex:0})),S=e=>{const{className:s,label:i,icon:d=a.jsx(E,{}),sx:u,size:l="400",progress:f,onClick:x,...c}=L({props:e,name:"ESSnackbarClose"}),v={...c},m=ge(v);return a.jsxs(fe,{className:H(m.root,s),children:[a.jsx(xe,{"aria-label":i,className:m.button,color:"monoB",size:l,sx:u,onClick:x,children:d}),f&&a.jsx(ve,{className:m.progress})]})};try{S.displayName="SnackbarClose",S.__docgenInfo={description:"",displayName:"SnackbarClose",props:{sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SnackbarCloseClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Text for the button aria-label.",name:"label",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Icon for the button.",name:"icon",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:"'400'"},description:"The size of the component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"100"'},{value:'"200"'},{value:'"300"'},{value:'"400"'},{value:'"500"'},{value:'"600"'},{value:'"700"'},{value:'"800"'},{value:'"900"'},{value:'"1000"'}]}},progress:{defaultValue:null,description:"If true, the hide progress is shown.",name:"progress",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLButtonElement>"}}}}}catch{}const U=e=>e.globals.locale==="en"?"Message":"Сообщение",O=e=>e.globals.locale==="en"?"Cancel":"Отменить",Be={tags:["autodocs"],component:g,parameters:{references:["Snackbar","SnackbarClose"]},argTypes:{heading:{control:{type:"text"}},message:{control:{type:"text"}},size:{control:"radio",options:["s","m","l","xl"]},icon:{table:{disable:!0}},progress:{table:{disable:!0}},colorMapping:{table:{disable:!0}},action:{table:{disable:!0}}},args:{}},b={render:(e,s)=>a.jsx(g,{...e,action:a.jsxs(a.Fragment,{children:[a.jsx(z,{color:"monoB",size:e.size==="s"?"300":"400",variant:"text",children:O(s)}),a.jsx(S,{icon:e.size==="s"?a.jsx(E,{container:!0,containerSize:"20px"}):void 0,progress:!!e.autoHideDuration,size:e.size==="s"?"300":void 0})]}),message:e.message||U(s)})},y={render:(e,s)=>a.jsx(g,{...e,action:a.jsxs(a.Fragment,{children:[a.jsx(z,{color:"monoB",size:e.size==="s"?"300":"400",variant:"text",children:O(s)}),a.jsx(S,{icon:e.size==="s"?a.jsx(E,{container:!0,containerSize:"20px"}):void 0,size:e.size==="s"?"300":void 0})]}),message:e.message||U(s),progress:!!e.autoHideDuration})};var q,M,T;b.parameters={...b.parameters,docs:{...(q=b.parameters)==null?void 0:q.docs,source:{originalSource:`{
  render: (args, context) => {
    return <Snackbar {...args} action={<>
            <Button color="monoB" size={args.size === 's' ? '300' : '400'} variant="text">
              {getCancelText(context)}
            </Button>
            <SnackbarClose icon={args.size === 's' ? <IconCloseW350 container containerSize="20px" /> : undefined} progress={!!args.autoHideDuration} size={args.size === 's' ? '300' : undefined} />
          </>} message={args.message || getMessage(context)} />;
  }
}`,...(T=(M=b.parameters)==null?void 0:M.docs)==null?void 0:T.source}}};var V,_,P;y.parameters={...y.parameters,docs:{...(V=y.parameters)==null?void 0:V.docs,source:{originalSource:`{
  render: (args, context) => {
    return <Snackbar {...args} action={<>
            <Button color="monoB" size={args.size === 's' ? '300' : '400'} variant="text">
              {getCancelText(context)}
            </Button>
            <SnackbarClose icon={args.size === 's' ? <IconCloseW350 container containerSize="20px" /> : undefined} size={args.size === 's' ? '300' : undefined} />
          </>} message={args.message || getMessage(context)} progress={!!args.autoHideDuration} />;
  }
}`,...(P=(_=y.parameters)==null?void 0:_.docs)==null?void 0:P.source}}};const Ne=["Demo","ProgressOnContainer"];export{b as Demo,y as ProgressOnContainer,Ne as __namedExportsOrder,Be as default};

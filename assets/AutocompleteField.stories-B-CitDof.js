import{j as o}from"./jsx-runtime-BoZ7yaty.js";import{r as s}from"./index-DIDRz_s2.js";import{c as B}from"./clsx.m-C7bORDfW.js";import{g as se,a as re,s as b,c as ae}from"./generateUtilityClasses-D4qQEpRV.js";import{b as ie,c as at}from"./useThemeProps-DJft-tfL.js";import{u as it}from"./useControlled-DdQm0pQX.js";import{u as dt}from"./useId-Dx6QqNEU.js";import{T as ct,o as Ee,a as Be,i as mt,O as ft,I as ht,t as gt}from"./TextField-BNsw1mhy.js";import{u as yt}from"./useFormControl-Crkhef2u.js";import{u as bt}from"./useForkRef-B4JCUkpP.js";import{u as Ie}from"./useEnhancedEffect-BGNjlb7u.js";import{I as vt}from"./IconMagnify2W400-BvRdrZGv.js";import{I as xt}from"./IconCloseW350-n8Wl4xK7.js";import{g as St}from"./getScrollbarSize-Bqq2hMjQ.js";import{o as xe}from"./ownerDocument-DW-IO8s5.js";import{o as Le}from"./ownerWindow-HkKU3E4x.js";import{u as At}from"./useIntersectionObserver-Bn-bajRp.js";import{b as ut,M as pt}from"./MenuItem-OzUXNg8S.js";import{G as Vt}from"./Grow-E4hGvhFy.js";import{F as Ct}from"./FocusTrap-D5YxnQCr.js";import{I as Ge,i as Re}from"./InputAdornment-50D-p4wJ.js";import{B as Mt,b as $e}from"./Button-Kloa1MkC.js";import{S as wt}from"./SpinnerRing-C9ZdLV0D.js";import{D as qt}from"./Divider-DrLGcsND.js";import{T as Et}from"./TooltipEllipsis-DviDGi-l.js";import{P as Rt}from"./Popper-BXVPFJIb.js";import{b as It}from"./ButtonBase-B9dD5NpA.js";import{s as Tt}from"./SvgIcon.classes-CqsHNf3G.js";import{M as Ot}from"./MenuList-Ccyljjh3.js";import{C as Ut}from"./Checkbox-ITp4r2VM.js";import{C as Ft}from"./ClickAwayListener-DnDjHjan.js";import{F as Nt}from"./FormHelperText-DjxYqVYo.js";import{F as Lt}from"./FormControl-7QajZyzq.js";import{B as Se}from"./Box-BsYG6vwI.js";import"./_commonjsHelpers-gnU0ypJ3.js";import"./clsx-B-dksMZM.js";import"./formControlState-Dq1zat_P.js";import"./debounce-Be36O1Ab.js";import"./appendOwnerState-B9NMWNaQ.js";import"./GlobalStyles-7TZ7H8GY.js";import"./Menu-BU22523T.js";import"./index-CbLA2MxP.js";import"./useSlotProps-Dpc6KwLu.js";import"./Popover-DMugHk6X.js";import"./getOverlayAlpha-VE_eitC7.js";import"./Modal-RUXrZPLp.js";import"./useEventCallback-B5h_k30D.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Portal-DAw-RMf5.js";import"./index-BqLR6Ykc.js";import"./index-B9nU-LZm.js";import"./Fade-CJiQNbBq.js";import"./useTheme-LlnDz48U.js";import"./utils-Cq59Lonh.js";import"./TransitionGroupContext-DaV7NuBA.js";import"./useControlled-ew9sXcp7.js";import"./createSvgIcon-DaHYJ09t.js";import"./SvgIcon-DeOyXKlF.js";import"./SvgIcon-DnRBQAn1.js";import"./useLatest-sVqXUmVb.js";import"./useForkRef-DJnV46t9.js";import"./useTimeout-CS-EPZZq.js";import"./Typography-BriYb5H6.js";import"./Spinner.utils-Cf9G5dKk.js";import"./useResizeObserver-BNbozrrH.js";import"./Tooltip-JjMSGEEd.js";import"./useEvent-B4f6aq-e.js";import"./useIsFocusVisible-moa6TI2l.js";import"./Checkbox.classes-D1vrHhOO.js";import"./SwitchBase-BmL7_b1g.js";import"./isMuiElement-WSaQkCi4.js";import"./clsx-KPMS8x67.js";const Pt=e=>{const t=s.useRef(e);return s.useEffect(()=>(t.current=e,()=>{t.current=void 0})),t.current},_t=e=>{const t=xe(e);return t.body===e?Le(e).innerWidth>t.documentElement.clientWidth:e.scrollHeight>e.clientHeight},We=e=>parseInt(Le(e).getComputedStyle(e).paddingRight,10)||0,kt=(e,t)=>{Ie(()=>{if(e){const n=[];if(_t(t)){const a=St(xe(t));n.push({value:t.style.paddingRight,property:"padding-right",el:t}),t.style.paddingRight=`${We(t)+a}px`;const u=xe(t).querySelectorAll(".mui-fixed");[].forEach.call(u,p=>{n.push({value:p.style.paddingRight,property:"padding-right",el:p}),p.style.paddingRight=`${We(p)+a}px`})}let r;if(t.parentNode instanceof DocumentFragment)r=xe(t).body;else{const a=t.parentElement,u=Le(t);r=(a==null?void 0:a.nodeName)==="HTML"&&u.getComputedStyle(a).overflowY==="scroll"?a:t}return n.push({value:r.style.overflow,property:"overflow",el:r},{value:r.style.overflowX,property:"overflow-x",el:r},{value:r.style.overflowY,property:"overflow-y",el:r}),r.style.overflow="hidden",()=>{n.forEach(({value:a,el:u,property:p})=>{a?u.style.setProperty(p,a):u.style.removeProperty(p)})}}},[e])};function Dt(e){return re("ESAutocomplete",e)}const jt=se("ESAutocomplete",["root","input","menu","displayValue","inputPlaceholder"]);function Bt(e){return re("ESAutocompleteMenu",e)}se("ESAutocompleteMenu",["root","paper","menuList","menuGroup","menuGroupDivider","tooltip","menuItem","menuItemText","sentinel","emptyState","search"]);function Gt(e){return re("ESMenuGroup",e)}se("ESMenuGroup",["root","paddingBottomS","paddingBottomM","paddingBottomL","sticky"]);const $t=e=>{const{classes:t,paddingBottom:n,sticky:r}=e,d={root:["root",r&&"sticky",`paddingBottom${at(n)}`]};return ae(d,Gt,t)},Wt=b("div",{name:"ESMenuGroup",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:{paddingBottom:n,sticky:r}}=e;return[t.root,r&&t.sticky,t[`paddingBottom${at(n)}`]]}})(({theme:e})=>({...e.typography.caption,color:e.vars.palette.monoA.A600,display:"flex",gap:"12px",justifyContent:"space-between",variants:[{props:{paddingBottom:"s"},style:{padding:"8px 16px 0"}},{props:{paddingBottom:"m"},style:{padding:"8px 16px 4px"}},{props:{paddingBottom:"l"},style:{padding:"8px 16px"}},{props:{sticky:!0},style:{background:e.vars.palette.surface[400],position:"sticky",top:"-8px",zIndex:2}}]})),Te=e=>{const{className:t,sx:n,paddingBottom:r="l",children:d,...a}=ie({props:e,name:"ESMenuGroup"}),u={paddingBottom:r,...a},p=$t(u);return o.jsx(Wt,{className:B(p.root,t),ownerState:u,sx:n,children:d})};try{Te.displayName="MenuGroup",Te.__docgenInfo={description:"",displayName:"MenuGroup",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<MenuGroupClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},paddingBottom:{defaultValue:null,description:"The bottom padding of the component.",name:"paddingBottom",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"s"'},{value:'"l"'}]}},sticky:{defaultValue:null,description:"Whether the menu group should be sticky.",name:"sticky",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}}}}}catch{}const Ht=e=>{const{classes:t}=e;return ae({root:["root"],paper:["paper"],menuList:["menuList"],menuGroup:["menuGroup"],menuGroupDivider:["menuGroupDivider"],menuItem:["menuItem"],menuItemText:["menuItemText"],sentinel:["sentinel"],emptyState:["emptyState"],search:["search"],tooltip:["tooltip"]},Bt,t)},zt=b(Rt,{name:"ESAutocompleteMenu",slot:"Root",overridesResolver:(e,t)=>t.root})(()=>({zIndex:1300,"& *":{outline:"none"},"& > div":{transformOrigin:"50% 0 0"}})),Kt=b("div",{name:"ESAutocompleteMenu",slot:"Paper",overridesResolver:(e,t)=>t.paper})(({theme:e})=>({display:"flex",flexDirection:"column",backgroundColor:e.vars.palette.surface[400],boxShadow:e.vars.palette.shadow.down[600],borderRadius:"6px",userSelect:"none",overflow:"hidden",pointerEvents:"auto"})),Yt=b(Ot,{name:"ESAutocompleteMenuMenuList",slot:"MenuList",overridesResolver:(e,t)=>t.menuList})(({theme:e})=>({...e.scrollbars.overlayMonoA,maxHeight:"228px"})),Jt=b(({className:e,...t})=>o.jsx(Et,{...t,classes:{popper:e}}),{name:"ESAutocompleteMenu",slot:"Tooltip",overridesResolver:(e,t)=>t.tooltip})({}),Xt=b(pt,{name:"ESAutocompleteMenu",slot:"MenuItem",overridesResolver:(e,t)=>t.menuItem})(()=>({})),Qt=b("div",{name:"ESAutocompleteMenu",slot:"MenuItemText",overridesResolver:(e,t)=>t.menuItemText})(()=>({overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"})),Zt=b(Te,{name:"ESAutocompleteMenu",slot:"MenuGroup",overridesResolver:(e,t)=>t.menuGroup})({}),eo=b(qt,{name:"ESAutocompleteMenu",slot:"MenuGroupDivider",overridesResolver:(e,t)=>t.menuGroupDivider})({margin:"8px 0"}),to=b(pt,{name:"ESAutocompleteMenu",slot:"Sentinel",overridesResolver:(e,t)=>t.sentinel})(()=>({[`&.${ut.size200}`]:{padding:0,minHeight:0,height:0}})),oo=b(Ut,{name:"ESAutocompleteMenu",slot:"Checkbox",overridesResolver:(e,t)=>t.checkbox})(()=>({marginLeft:"-8px",marginRight:"4px",flexShrink:0})),He=b("div",{name:"ESAutocompleteMenu",slot:"EmptyState",overridesResolver:(e,t)=>t.emptyState})(({theme:e})=>({...e.typography.caption,display:"flex",alignItems:"center",justifyContent:"center",gap:"8px",padding:"12px 16px",color:e.vars.palette.monoA.A600})),no=b(ct,{name:"ESAutocompleteMenu",slot:"Search",overridesResolver:(e,t)=>t.search})(({theme:e})=>({borderBottom:`1px solid ${e.vars.palette.monoA.A100}`,[`& .${Ee.root}.${Be.adornedEnd}`]:{paddingRight:"8px"},[`& .${mt.root}`]:{opacity:0},[`& .${Re.positionStart}`]:{color:e.vars.palette.monoA.A500},[`&:hover .${Re.positionStart} .${Tt.root}`]:{color:e.vars.palette.monoA.A600},[`& .${Re.positionEnd}`]:{marginLeft:"6px",[`& .${$e.root}`]:{height:"40px",flexShrink:0,"--icon":e.vars.palette.monoA.A400,[`& .${It.wrapper}`]:{padding:"0 7px"},[`&.${$e.variantText}`]:{"--hovered":"inherit","--pressed":"inherit"},"&:hover":{"--icon":e.vars.palette.monoA.A500},"&:active":{"--icon":e.vars.palette.monoA.A600}}},[`& .${Ee.notchedOutline}`]:{border:"none",[`&.${Be.adornedEnd}`]:{paddingRight:"4px"}},[`& .${Ee.input}`]:{...e.typography.body100}})),Oe=s.forwardRef(function(t,n){const{paperRef:r,className:d,classes:a,sx:u,width:p,offset:S=[0,4],container:A=document.body,anchorEl:M,open:R,actions:N,options:I,getOptionValue:O,getOptionLabel:U,getOptionDisabled:L,groupBy:v,MenuGroupProps:_,loading:c,header:ue,footer:ee,inlineSearch:$,disableAutoFocus:y,disableAutoScrollToSelected:W,disableEnforceFocus:H,disableEscapeKeyDown:V,disableRestoreFocus:z,disableScrollLock:k,disableTooltip:m,labelNoOptions:i,labelNoMatches:P,labelLoading:K,labelSearch:Y,labelSearchClear:Ve,PopperProps:q,SearchProps:w,TooltipProps:D,transitionDuration:pe,TransitionProps:E,onClose:j,onLoadMore:te,iconSearch:oe=o.jsx(vt,{}),iconSearchClear:de=o.jsx(xt,{}),...f}=ie({props:t,name:"ESAutocompleteMenu"}),ce=s.useRef(null),J=s.useRef(null),[Ce,Me]=s.useState(null),ne=s.useRef(!0);s.useImperativeHandle(N,()=>({setTrapFocusEnabled:l=>{ne.current=l}}),[ne]),kt(!k&&R,A);const me=s.useMemo(()=>f.multiple?f.value:f.value?[f.value]:[],[f.multiple,f.value]),X=s.useMemo(()=>me.reduce((l,x)=>(l[O(x)]=!0,l),{}),[me]);At({current:Ce},l=>{te&&l[0].isIntersecting&&te()});const h=s.useCallback(l=>()=>{if(f.onChange)if(f.multiple){const x=f.value.findIndex(T=>O(T)===O(l));x===-1?f.onChange(f.value.concat(l)):f.onChange(f.value.filter((T,F)=>F!==x))}else f.onChange(l)},[f.multiple,f.value,f.onChange]),g=l=>{l.key==="Escape"&&R&&!V&&(l.stopPropagation(),j==null||j(l,"escapeKeyDown"))},Q=s.useCallback(()=>{if(J.current&&!W){const l=J.current.querySelector(`.${ut.selected}`);l&&(J.current.scrollTop=l.offsetTop+l.clientHeight/2-J.current.clientHeight/2)}},[W]),C=Ht({classes:a}),ge=[];let we=!0;for(let l=0;l<I.length;l++){const x=I[l],T=O(x),F=U(x),_e=!!X[T],le=L?L(x):void 0,qe=v==null?void 0:v(x);v&&(l===0||qe!==v(I[l-1]))&&ge.push(o.jsxs(s.Fragment,{children:[l>0&&o.jsx(eo,{className:C.menuGroupDivider,color:"monoA.A100"}),o.jsx(Zt,{"aria-disabled":!0,tabIndex:-1,..._,className:B(C.menuGroup,_==null?void 0:_.className),children:qe})]},`${T}-${qe}`));const ke=({ref:De,childrenRef:je}={})=>o.jsxs(Xt,{ref:De&&De,autoFocus:!le&&we&&!w&&!y,className:C.menuItem,disabled:le,selected:_e,tabIndex:!le&&we?0:-1,onClick:le?void 0:h(x),children:[!!f.multiple&&o.jsx(oo,{readOnly:!0,checked:_e,color:"secondary",disabled:le,tabIndex:-1}),o.jsx(Qt,{ref:je&&je,className:C.menuItemText,children:F})]});m?ge.push(ke()):ge.push(o.jsx(Jt,{disableInteractive:!0,title:F,...D,className:B(C.tooltip,D==null?void 0:D.className),children:ke},T)),le||(we=!1)}return o.jsx(zt,{ref:n,transition:!0,anchorEl:M,className:B(d,C.root),open:R,placement:"bottom",sx:u,...q,modifiers:[{name:"offset",options:{offset:S}},...k?[]:[{name:"preventOverflow",options:{altAxis:!0,padding:{top:8,bottom:8}}}],...(q==null?void 0:q.modifiers)||[]],onKeyDown:l=>{var x;g(l),(x=q==null?void 0:q.onKeyDown)==null||x.call(q,l)},children:({TransitionProps:l})=>o.jsx(Vt,{in:l==null?void 0:l.in,timeout:pe,...E,onEnter:(...x)=>{var T,F;Q(),(T=l==null?void 0:l.onEnter)==null||T.call(l),(F=E==null?void 0:E.onEnter)==null||F.call(E,...x)},onExited:(...x)=>{var T,F;(T=l==null?void 0:l.onExited)==null||T.call(l),(F=E==null?void 0:E.onExited)==null||F.call(E,...x)},children:o.jsx("div",{children:o.jsx(Ct,{disableAutoFocus:y,disableEnforceFocus:H,disableRestoreFocus:z,isEnabled:()=>ne.current,open:R,children:o.jsx("div",{tabIndex:-1,children:o.jsx(Ft,{mouseEvent:"onMouseDown",onClickAway:x=>{j==null||j(x,"clickAway")},children:o.jsxs(Kt,{ref:r,className:C.paper,style:{width:p,maxHeight:k?void 0:"calc(100dvh - 16px)"},children:[!!w&&!$&&o.jsx(no,{fullWidth:!0,autoFocus:!y,className:C.search,inputRef:ce,placeholder:Y,size:"40",...w,InputProps:{startAdornment:o.jsx(Ge,{position:"start",children:oe}),endAdornment:!!w.value&&o.jsx(Ge,{position:"end",children:o.jsx(Mt,{"aria-label":Ve,color:"monoA",size:"300",onClick:()=>{w.onChange&&(w.onChange({target:{value:""}}),ce.current&&ce.current.focus())},children:de})}),...w.InputProps}}),ue,c?o.jsxs(He,{className:C.emptyState,children:[o.jsx(wt,{color:"monoA",size:16})," ",K]}):I.length?o.jsxs(Yt,{ref:J,className:C.menuList,children:[ge,!!te&&o.jsx(to,{ref:Me,disabled:!0,className:C.sentinel,tabIndex:-1})]}):o.jsx(He,{className:C.emptyState,children:w!=null&&w.value?P:i}),ee]})})})})})})})});try{Oe.displayName="AutocompleteMenu",Oe.__docgenInfo={description:"",displayName:"AutocompleteMenu",props:{paperRef:{defaultValue:null,description:"",name:"paperRef",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<AutocompleteMenuClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},container:{defaultValue:null,description:"The `container` will have the portal children appended to it.\n\nBy default, it uses the body of the top-level document object,\nso it's simply `document.body` most of the time.",name:"container",required:!1,type:{name:"HTMLElement"}},anchorEl:{defaultValue:null,description:`An HTML element, [virtualElement](https://popper.js.org/docs/v2/virtual-elements/),
or a function that returns either.
It's used to set the position of the popper.
The return value will passed as the reference object of the Popper instance.`,name:"anchorEl",required:!0,type:{name:"HTMLElement | VirtualElement | (() => HTMLElement) | (() => VirtualElement) | null | undefined"}},open:{defaultValue:null,description:"If `true`, the component is shown.",name:"open",required:!0,type:{name:"boolean"}},actions:{defaultValue:null,description:"A ref for imperative actions.",name:"actions",required:!1,type:{name:"Ref<AutocompleteMenuImperativeActions>"}},width:{defaultValue:null,description:"The width of the menu.",name:"width",required:!1,type:{name:"string | number"}},offset:{defaultValue:null,description:"The offset from anchor element.",name:"offset",required:!1,type:{name:"[number, number]"}},options:{defaultValue:null,description:"Array of the options.",name:"options",required:!0,type:{name:"T[]"}},getOptionValue:{defaultValue:null,description:"Used to determine the value for a given option. It's used for options comparison.",name:"getOptionValue",required:!0,type:{name:"(option: T) => string | number"}},getOptionLabel:{defaultValue:null,description:"Used to determine the display value for a given option. It's used to fill the input and the list box options.",name:"getOptionLabel",required:!0,type:{name:"(option: T) => ReactNode"}},getOptionDisabled:{defaultValue:null,description:"Used to determine the disabled state for a given option.",name:"getOptionDisabled",required:!1,type:{name:"((option: T) => boolean)"}},groupBy:{defaultValue:null,description:"If provided, the options will be grouped under the returned value.",name:"groupBy",required:!1,type:{name:"((option: T) => string | number)"}},loading:{defaultValue:null,description:"If true, the component is in a loading state. This shows the labelLoading in place of options (only if options are empty).",name:"loading",required:!1,type:{name:"boolean"}},header:{defaultValue:null,description:"Children content for the menu header.",name:"header",required:!1,type:{name:"ReactNode"}},footer:{defaultValue:null,description:"Children content for the menu footer.",name:"footer",required:!1,type:{name:"ReactNode"}},inlineSearch:{defaultValue:null,description:"If true, it is possible to enter a search string in the input itself.",name:"inlineSearch",required:!1,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback fired when the menu requests to be closed.",name:"onClose",required:!1,type:{name:'((event: unknown, reason: "escapeKeyDown" | "clickAway") => void)'}},onLoadMore:{defaultValue:null,description:"Callback fired when the menu list is scrolled to the end.",name:"onLoadMore",required:!1,type:{name:"(() => void)"}},PopperProps:{defaultValue:null,description:"Props applied to the popper component.",name:"PopperProps",required:!1,type:{name:'Omit<Partial<PopperProps>, "open" | "anchorEl">'}},SearchProps:{defaultValue:null,description:"Props applied to the search field component. If present, shows the component.",name:"SearchProps",required:!1,type:{name:"Partial<FilledTextFieldProps | OutlinedTextFieldProps | StandardTextFieldProps>"}},MenuGroupProps:{defaultValue:null,description:"Props applied to the MenuGroup components.",name:"MenuGroupProps",required:!1,type:{name:"Partial<MenuGroupProps>"}},TooltipProps:{defaultValue:null,description:"Props applied to the Tooltip component.",name:"TooltipProps",required:!1,type:{name:"Partial<TooltipEllipsisProps>"}},transitionDuration:{defaultValue:{value:"'auto'"},description:"Set to 'auto' to automatically calculate transition time based on height.",name:"transitionDuration",required:!1,type:{name:'number | { appear?: number; enter?: number; exit?: number | undefined; } | { appear?: number | undefined; enter?: number | undefined; exit?: number | undefined; } | "auto" | undefined'}},TransitionProps:{defaultValue:{value:"{}"},description:"Props applied to the transition element.\nBy default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.",name:"TransitionProps",required:!1,type:{name:"TransitionProps"}},disableAutoFocus:{defaultValue:null,description:"If `true`, the modal will not automatically shift focus to itself when it opens, and\nreplace it to the last focused element when it closes.\nThis also works correctly with any modal children that have the `disableAutoFocus` prop.\n\nGenerally this should never be set to `true` as it makes the modal less\naccessible to assistive technologies, like screen readers.",name:"disableAutoFocus",required:!1,type:{name:"boolean"}},disableAutoScrollToSelected:{defaultValue:null,description:"When opening the menu will not scroll to the selected item.",name:"disableAutoScrollToSelected",required:!1,type:{name:"boolean"}},disableEnforceFocus:{defaultValue:null,description:"If `true`, the modal will not prevent focus from leaving the modal while open.",name:"disableEnforceFocus",required:!1,type:{name:"boolean"}},disableEscapeKeyDown:{defaultValue:null,description:"If `true`, hitting escape will not fire the `onClose` callback.",name:"disableEscapeKeyDown",required:!1,type:{name:"boolean"}},disableRestoreFocus:{defaultValue:null,description:"If `true`, the modal will not restore focus to previously focused element once modal is hidden or unmounted.",name:"disableRestoreFocus",required:!1,type:{name:"boolean"}},disableScrollLock:{defaultValue:null,description:"Disable the scroll lock behavior.",name:"disableScrollLock",required:!1,type:{name:"boolean"}},disableTooltip:{defaultValue:null,description:"If true, the default overflow tooltip is removed.",name:"disableTooltip",required:!1,type:{name:"boolean"}},labelNoOptions:{defaultValue:null,description:"Text for the empty state.",name:"labelNoOptions",required:!1,type:{name:"ReactNode"}},labelNoMatches:{defaultValue:null,description:"Text for the empty state when search value is not empty.",name:"labelNoMatches",required:!1,type:{name:"ReactNode"}},labelLoading:{defaultValue:null,description:"Text for the loading state.",name:"labelLoading",required:!1,type:{name:"ReactNode"}},labelSearch:{defaultValue:null,description:"Text for the search field placeholder.",name:"labelSearch",required:!1,type:{name:"string"}},labelSearchClear:{defaultValue:null,description:"Text for the search field clear button aria-label.",name:"labelSearchClear",required:!1,type:{name:"string"}},iconSearch:{defaultValue:null,description:"Icon for the search field startAdornment.",name:"iconSearch",required:!1,type:{name:"ReactNode"}},iconSearchClear:{defaultValue:null,description:"Icon for the search field clear button.",name:"iconSearchClear",required:!1,type:{name:"ReactNode"}},multiple:{defaultValue:null,description:"",name:"multiple",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"T | T[] | null"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: T | null) => void) | ((value: T[]) => void)"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"ForwardedRef<HTMLDivElement>"}}}}}catch{}function lo(e){return re("ESAutocompleteMenuFooter",e)}se("ESAutocompleteMenuFooter",["root"]);const so=e=>{const{classes:t}=e;return ae({root:["root"]},lo,t)},ro=b("div",{name:"ESAutocompleteMenuFooter",slot:"Root",overridesResolver:(e,t)=>t.root})(({theme:e})=>({...e.typography.caption,color:e.vars.palette.monoA.A600,padding:"5px 16px 6px",borderTop:`1px solid ${e.vars.palette.monoA.A100}`})),Ue=e=>{const{className:t,sx:n,children:r,...d}=ie({props:e,name:"ESAutocompleteMenuFooter"}),a={...d},u=so(a);return o.jsx(ro,{className:B(u.root,t),sx:n,children:r})};try{Ue.displayName="AutocompleteMenuFooter",Ue.__docgenInfo={description:"",displayName:"AutocompleteMenuFooter",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<AutocompleteMenuFooterClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}function ao(e){return re("ESAutocompleteMenuHeader",e)}se("ESAutocompleteMenuHeader",["root"]);const io=e=>{const{classes:t}=e;return ae({root:["root"]},ao,t)},uo=b("div",{name:"ESAutocompleteMenuHeader",slot:"Root",overridesResolver:(e,t)=>t.root})(({theme:e})=>({...e.typography.caption,color:e.vars.palette.monoA.A600,padding:"6px 16px 5px",borderBottom:`1px solid ${e.vars.palette.monoA.A100}`})),Fe=e=>{const{className:t,sx:n,children:r,...d}=ie({props:e,name:"ESAutocompleteMenuHeader"}),a={...d},u=io(a);return o.jsx(uo,{className:B(u.root,t),sx:n,children:r})};try{Fe.displayName="AutocompleteMenuHeader",Fe.__docgenInfo={description:"",displayName:"AutocompleteMenuHeader",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<AutocompleteMenuHeaderClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}const po=e=>{const{classes:t}=e;return ae({root:["root"],input:["input"],menu:["menu"],displayValue:["displayValue"],inputPlaceholder:["inputPlaceholder"]},Dt,t)},co=b(ft,{name:"ESAutocomplete",slot:"Root",overridesResolver:(e,t)=>t.root})(()=>({cursor:"pointer",[`& .${jt.input}`]:{width:"100%",outline:"none",whiteSpace:"nowrap",overflow:"hidden",display:"inline-flex",alignItems:"center"}})),mo=b(Oe,{name:"ESAutocomplete",slot:"Menu",overridesResolver:(e,t)=>t.menu})(()=>({pointerEvents:"auto",variants:[{props:{inlineSearch:!0},style:{pointerEvents:"none"}}]})),fo=b("div",{name:"ESAutocomplete",slot:"DisplayValue",overridesResolver:(e,t)=>t.displayValue})(()=>({minWidth:0,overflow:"hidden",textOverflow:"ellipsis"})),ho=b("div",{name:"ESAutocomplete",slot:"InputPlaceholder",overridesResolver:(e,t)=>t.inputPlaceholder})(({theme:e})=>({color:e.vars.palette.monoA.A400,minWidth:0,overflow:"hidden",textOverflow:"ellipsis"})),Ne=e=>{const{className:t,classes:n,sx:r,id:d,inputRef:a,label:u,name:p,placeholder:S,"aria-describedby":A,startAdornment:M,endAdornment:R,options:N,getOptionValue:I,getOptionLabel:O,getOptionDisabled:U,groupBy:L,MenuGroupProps:v,loading:_,inlineSearch:c,header:ue,footer:ee,MenuProps:$,SearchProps:y,open:W,onOpen:H,onClose:V,onLoadMore:z,onBlur:k,...m}=ie({props:e,name:"ESAutocomplete"}),i=yt();if(!i)throw new Error("No provider for FormControlContext.");const P=s.useRef(null),K=s.useRef(null),Y=s.useRef(null),Ve=bt(Y,a),q=s.useRef(null),w=s.useRef(!1),[D,pe]=it(!1,W),[E,j]=s.useState(0),te=Pt(i.focused),oe=s.useMemo(()=>m.multiple?m.value:m.value?[m.value]:[],[m.multiple,m.value]),de=s.useMemo(()=>m.getDisplayValue?(m.multiple,m.getDisplayValue(m.value)):oe.map(h=>O(h)).join(", "),[m.value,oe]);Ie(()=>{oe.length?i.onFilled():i.onEmpty()},[oe,i.onEmpty,i.onFilled,i.filled]),s.useEffect(()=>{k&&!i.focused&&te&&(w.current?w.current=!1:k({target:{name:p}}))},[i.focused,te]),Ie(()=>{i.setAdornedStart(!!M)},[!!M]);const f=s.useCallback(h=>{P.current&&(j(P.current.clientWidth),pe(!0),H==null||H(),h||setTimeout(()=>{if(K.current){const g=K.current.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');g&&g.focus()}},0))},[]),ce=s.useCallback((h,g)=>{var Q;g==="escapeKeyDown"&&(w.current=!0,requestAnimationFrame(()=>{Y.current&&Y.current.focus()})),!(c&&g==="clickAway"&&((Q=P.current)!=null&&Q.contains(h.target)))&&(pe(!1),V==null||V())},[c]),J=h=>{m.onChange&&m.onChange(h)},Ce=h=>{(c?["ArrowUp","ArrowDown","Enter"]:[" ","ArrowUp","ArrowDown","Enter"]).indexOf(h.key)!==-1&&(h.preventDefault(),f()),["Escape","Tab"].indexOf(h.key)!==-1&&D&&(h.stopPropagation(),pe(!1),V==null||V())},Me=h=>{var g,Q;i.disabled||h.button!==0||((Q=(g=q.current)==null?void 0:g.setTrapFocusEnabled)==null||Q.call(g,!1),requestAnimationFrame(()=>{var fe,C;Y.current&&Y.current.focus(),(C=(fe=q.current)==null?void 0:fe.setTrapFocusEnabled)==null||C.call(fe,!0)}),f(!!c))},ne=i.filled||i.focused||!!M||!!D,me={classes:n,inlineSearch:c},X=po(me);return o.jsxs(o.Fragment,{children:[o.jsx(co,{ref:P,autoComplete:c?"off":void 0,autoFocus:c?i.focused:!1,className:B(t,X.root),disabled:i.disabled,endAdornment:R,error:i.error,fullWidth:m.fullWidth,id:d,inputComponent:c&&i.focused?"input":"div",inputProps:{children:c&&i.focused?null:de?o.jsx(fo,{className:X.displayValue,children:de}):(ne||!u)&&o.jsx(ho,{className:X.inputPlaceholder,children:S}),className:X.input,role:c?"input":"button",tabIndex:i.disabled?-1:0,onBlur:h=>{var g;(g=i.onBlur)==null||g.call(i,h)},onFocus:h=>{var g;(g=i.onFocus)==null||g.call(i,h)},onKeyDown:Ce,"aria-describedby":A,...m.inputProps},inputRef:Ve,label:u,name:p,notched:ne,placeholder:c?S:void 0,required:i.required,startAdornment:M,sx:r,value:c&&i.focused?y==null?void 0:y.value:null,onChange:c&&i.focused?h=>{var g;(g=y==null?void 0:y.onChange)==null||g.call(y,h),f(!0)}:void 0,onMouseDown:Me,children:c?null:de}),o.jsx(mo,{value:m.value,multiple:m.multiple,disableRestoreFocus:!0,MenuGroupProps:v,SearchProps:y,actions:q,anchorEl:P.current,className:X.menu,disableAutoFocus:!!c,disableScrollLock:!!c,footer:ee,getOptionDisabled:U,getOptionLabel:O,getOptionValue:I,groupBy:L,header:ue,inlineSearch:c,loading:_,open:!!D,options:N,paperRef:K,width:E,onChange:J,onClose:ce,onLoadMore:z,...$,ownerState:me})]})};try{Ne.displayName="Autocomplete",Ne.__docgenInfo={description:"The autocomplete is used to choose an item from a collection of options.",displayName:"Autocomplete",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<AutocompleteClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},inlineSearch:{defaultValue:null,description:"If true, it is possible to enter a search string in the input itself.",name:"inlineSearch",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"If true, the popper is opened.",name:"open",required:!1,type:{name:"boolean"}},onOpen:{defaultValue:null,description:"Callback fired when the menu requests to be opened.",name:"onOpen",required:!1,type:{name:"(() => void)"}},onClose:{defaultValue:null,description:"Callback fired when the menu requests to be closed.",name:"onClose",required:!1,type:{name:"(() => void)"}},onBlur:{defaultValue:null,description:"Callback fired when the input loses focus.",name:"onBlur",required:!1,type:{name:"((event: { target: { name?: string; }; }) => void)"}},MenuProps:{defaultValue:null,description:"Props applied to the menu component.",name:"MenuProps",required:!1,type:{name:'Partial<Omit<AutocompleteMenuProps<T>, "onChange" | "value" | "multiple" | "options" | "getOptionLabel" | "getOptionValue" | "getOptionDisabled" | "groupBy" | "getDisplayValue" | "actions">>'}},SearchProps:{defaultValue:null,description:"Props applied to the search field component. If present, shows the component.",name:"SearchProps",required:!1,type:{name:"Partial<FilledTextFieldProps | OutlinedTextFieldProps | StandardTextFieldProps>"}},multiple:{defaultValue:null,description:"",name:"multiple",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"T | T[] | null"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: T | null) => void) | ((value: T[]) => void)"}},getDisplayValue:{defaultValue:null,description:"",name:"getDisplayValue",required:!1,type:{name:"((value: T | null) => ReactNode) | ((value: T[]) => ReactNode)"}},footer:{defaultValue:null,description:"Children content for the menu footer.",name:"footer",required:!1,type:{name:"ReactNode"}},header:{defaultValue:null,description:"Children content for the menu header.",name:"header",required:!1,type:{name:"ReactNode"}},loading:{defaultValue:null,description:"If true, the component is in a loading state. This shows the labelLoading in place of options (only if options are empty).",name:"loading",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Array of the options.",name:"options",required:!0,type:{name:"T[]"}},getOptionLabel:{defaultValue:null,description:"Used to determine the display value for a given option. It's used to fill the input and the list box options.",name:"getOptionLabel",required:!0,type:{name:"(option: T) => ReactNode"}},getOptionValue:{defaultValue:null,description:"Used to determine the value for a given option. It's used for options comparison.",name:"getOptionValue",required:!0,type:{name:"(option: T) => string | number"}},getOptionDisabled:{defaultValue:null,description:"Used to determine the disabled state for a given option.",name:"getOptionDisabled",required:!1,type:{name:"((option: T) => boolean)"}},groupBy:{defaultValue:null,description:"If provided, the options will be grouped under the returned value.",name:"groupBy",required:!1,type:{name:"((option: T) => string | number)"}},MenuGroupProps:{defaultValue:null,description:"Props applied to the MenuGroup components.",name:"MenuGroupProps",required:!1,type:{name:"Partial<MenuGroupProps>"}},onLoadMore:{defaultValue:null,description:"Callback fired when the menu list is scrolled to the end.",name:"onLoadMore",required:!1,type:{name:"(() => void)"}}}}}catch{}function go(e){return re("ESAutocompleteField",e)}se("ESAutocompleteField",["root"]);const yo=e=>{const{classes:t}=e;return ae({root:["root"]},go,t)},bo=b(Lt,{name:"ESAutocompleteField",slot:"Root",overridesResolver:(e,t)=>t.root})({}),G=e=>{const{className:t,classes:n,sx:r,autoFocus:d,disabled:a,error:u,fullWidth:p,id:S,label:A,required:M,open:R,closeAfterSelect:N,helperText:I,size:O,InputProps:U,InputLabelProps:L,FormHelperTextProps:v,MenuGroupProps:_,onChange:c,...ue}=ie({props:e,name:"ESAutocompleteField"}),[ee,$]=it(!1,R),y=dt(S),W=I&&y?`${y}-helper-text`:void 0,H=A&&y?`${y}-label`:void 0,{onClose:V,onOpen:z,...k}=U||{},i=yo({classes:n}),P=K=>{c&&c(K),N&&(V==null||V(),$(!1))};return o.jsxs(bo,{className:B(i.root,gt.root,t),disabled:a,error:u,focused:ee||void 0,fullWidth:p,required:M,size:O,sx:r,children:[A!==null&&A!==""&&o.jsx(ht,{htmlFor:y,id:H,required:M,...L,children:A}),o.jsx(Ne,{MenuGroupProps:_,"aria-describedby":W,autoFocus:d,disabled:a,fullWidth:p,id:y,label:A,open:ee,required:M,onChange:P,onClose:()=>{V==null||V(),$(!1)},onOpen:()=>{z==null||z(),$(!0)},...ue,...k}),!!I&&o.jsx(Nt,{id:W,...v,children:I})]})};try{G.displayName="AutocompleteField",G.__docgenInfo={description:"The autocomplete is used to choose an item from a collection of options.",displayName:"AutocompleteField",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<AutocompleteFieldClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},closeAfterSelect:{defaultValue:null,description:"If true, the popover will close after menu item is selected.",name:"closeAfterSelect",required:!1,type:{name:"boolean"}},helperText:{defaultValue:null,description:"The helper text content.",name:"helperText",required:!1,type:{name:"ReactNode"}},size:{defaultValue:null,description:"The size of the component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'}]}},InputProps:{defaultValue:null,description:"Props applied to the `Autocomplete` element.",name:"InputProps",required:!1,type:{name:'Partial<Omit<AutocompleteProps<T>, "onChange" | "value" | "multiple" | "options" | "getOptionLabel" | "getOptionValue" | "getOptionDisabled" | "groupBy" | "getDisplayValue">>'}},InputLabelProps:{defaultValue:null,description:"Props applied to the `InputLabel` element.",name:"InputLabelProps",required:!1,type:{name:'InputLabelProps<"label", {}>'}},FormHelperTextProps:{defaultValue:null,description:"Props applied to the `FormHelperText` element.",name:"FormHelperTextProps",required:!1,type:{name:'FormHelperTextProps<"p", {}>'}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"T | T[] | null"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((value: T | null) => void) | ((value: T[]) => void)"}},getDisplayValue:{defaultValue:null,description:"",name:"getDisplayValue",required:!1,type:{name:"((value: T | null) => ReactNode) | ((value: T[]) => ReactNode)"}},multiple:{defaultValue:null,description:"",name:"multiple",required:!1,type:{name:"boolean"}},open:{defaultValue:null,description:"If true, the popper is opened.",name:"open",required:!1,type:{name:"boolean"}},footer:{defaultValue:null,description:"Children content for the menu footer.",name:"footer",required:!1,type:{name:"ReactNode"}},header:{defaultValue:null,description:"Children content for the menu header.",name:"header",required:!1,type:{name:"ReactNode"}},onBlur:{defaultValue:null,description:"Callback fired when the input loses focus.",name:"onBlur",required:!1,type:{name:"((event: { target: { name?: string; }; }) => void)"}},loading:{defaultValue:null,description:"If true, the component is in a loading state. This shows the labelLoading in place of options (only if options are empty).",name:"loading",required:!1,type:{name:"boolean"}},options:{defaultValue:null,description:"Array of the options.",name:"options",required:!0,type:{name:"T[]"}},getOptionLabel:{defaultValue:null,description:"Used to determine the display value for a given option. It's used to fill the input and the list box options.",name:"getOptionLabel",required:!0,type:{name:"(option: T) => ReactNode"}},getOptionValue:{defaultValue:null,description:"Used to determine the value for a given option. It's used for options comparison.",name:"getOptionValue",required:!0,type:{name:"(option: T) => string | number"}},getOptionDisabled:{defaultValue:null,description:"Used to determine the disabled state for a given option.",name:"getOptionDisabled",required:!1,type:{name:"((option: T) => boolean)"}},groupBy:{defaultValue:null,description:"If provided, the options will be grouped under the returned value.",name:"groupBy",required:!1,type:{name:"((option: T) => string | number)"}},MenuGroupProps:{defaultValue:null,description:"Props applied to the MenuGroup components.",name:"MenuGroupProps",required:!1,type:{name:"Partial<MenuGroupProps>"}},inlineSearch:{defaultValue:null,description:"If true, it is possible to enter a search string in the input itself.",name:"inlineSearch",required:!1,type:{name:"boolean"}}}}}catch{}const Z={en:[],ru:[]};for(let e=0;e<25;e++)Z.en.push({id:e+1,name:`John Doe ${e+1}`}),Z.ru.push({id:e+1,name:`Иванов Иван ${e+1}`});const Ae=e=>e.id,Pe=e=>e.name,vo=e=>o.jsx("i",{children:e.name}),xo=e=>o.jsx("span",{children:e.map((t,n)=>o.jsxs(o.Fragment,{children:[o.jsx("i",{children:t.name},t.id),n<e.length-1&&", "]}))}),Dn={tags:["autodocs"],component:G,parameters:{references:["Autocomplete","AutocompleteField","MenuGroup"]},argTypes:{MenuGroupPaddingBottom:{name:"paddingBottom",description:"The bottom padding of the `MenuGroup` component.",table:{category:"MenuGroup",defaultValue:{summary:"l"}},options:["s","m","l"],control:{type:"select"}},MenuGroupSticky:{name:"sticky",description:"The sticky of the `MenuGroup` component.",table:{category:"MenuGroup"},control:{type:"boolean"}},multiple:{control:{type:"boolean"}},inlineSearch:{control:{type:"boolean"}},closeAfterSelect:{control:{type:"boolean"}},header:{control:{type:"text"}},footer:{control:{type:"text"}},disabled:{control:{type:"boolean"}},required:{control:{type:"boolean"}},error:{control:{type:"boolean"}},size:{options:["56","48","40","32"],control:{type:"select"}},helperText:{control:{type:"text"}},placeholder:{control:{type:"text"}},InputProps:{table:{disable:!0}},InputLabelProps:{table:{disable:!0}},FormHelperTextProps:{table:{disable:!0}},value:{table:{disable:!0}},getDisplayValue:{table:{disable:!0}},getOptionDisabled:{table:{disable:!0}},getOptionLabel:{table:{disable:!0}},getOptionValue:{table:{disable:!0}},loading:{table:{disable:!0}},options:{table:{disable:!0}}}},ye={render:function(t,{globals:{locale:n}}){const[r,d]=s.useState([]),[a,u]=s.useState(!1),[p,S]=s.useState(null),[A,M]=s.useState([]),[R,N]=s.useState(""),I=v=>{S(v),t.inlineSearch&&v&&N(v.name)},O=v=>{M(v)};s.useEffect(()=>{d(Z[n]),N(""),u(!1)},[n]);const U=s.useRef(null);s.useEffect(()=>(u(!0),U.current=setTimeout(()=>{d(Z[n].filter(v=>v.name.toLowerCase().includes(R.toLowerCase()))),u(!1)},1e3),()=>{U.current&&(clearTimeout(U.current),U.current=null)}),[R]);const L={closeAfterSelect:t.closeAfterSelect,disabled:t.disabled,error:t.error,header:t.header&&o.jsx(Fe,{children:t.header}),footer:t.footer&&o.jsx(Ue,{children:t.footer}),fullWidth:!0,inlineSearch:t.inlineSearch,getOptionLabel:Pe,getOptionValue:Ae,helperText:t.helperText,loading:a,options:r,placeholder:t.placeholder,required:t.required,size:t.size,InputProps:{SearchProps:{value:R,onChange:v=>N(v.target.value)}},onBlur:t.onBlur};return o.jsx(Se,{sx:{maxWidth:"500px"},children:t.multiple?o.jsx(G,{multiple:!0,label:n==="en"?"Users":"Пользователи",value:A,onChange:O,...L}):o.jsx(G,{label:n==="en"?"Users":"Пользователи",value:p,onChange:I,...L})})}},he={render:function(t,{globals:{locale:n}}){const[r,d]=s.useState([]),[a,u]=s.useState([]),p=S=>{u(S)};return s.useEffect(()=>{d(Z[n])},[n]),o.jsx(Se,{sx:{maxWidth:"500px"},children:o.jsx(G,{fullWidth:!0,multiple:!0,MenuGroupProps:{paddingBottom:t.MenuGroupPaddingBottom,sticky:t.MenuGroupSticky},getOptionLabel:Pe,getOptionValue:Ae,groupBy:S=>{const A=Math.floor(S.id/10);return`${A*10} - ${(A+1)*10-1}`},label:n==="en"?"Users":"Пользователи",options:r,value:a,onChange:p})})}},be={render:function(t,{globals:{locale:n}}){const[r,d]=s.useState([]),[a,u]=s.useState([]),p=S=>{u(S)};return s.useEffect(()=>{d(Z[n])},[n]),o.jsx(Se,{sx:{maxWidth:"500px"},children:o.jsx(G,{fullWidth:!0,multiple:!0,getDisplayValue:xo,getOptionLabel:vo,getOptionValue:Ae,label:n==="en"?"Users":"Пользователи",options:r,value:a,onChange:p})})}},ve={render:function(t,{globals:{locale:n}}){const[r,d]=s.useState(!1),[a,u]=s.useState([]),[p,S]=s.useState([]),A=M=>{S(M)};return s.useEffect(()=>{u(Z[n])},[n]),o.jsx(Se,{sx:{maxWidth:"500px"},children:o.jsx(G,{fullWidth:!0,multiple:!0,InputProps:{onOpen:()=>d(!0),onClose:()=>d(!1)},getOptionLabel:Pe,getOptionValue:Ae,label:n==="en"?"Users":"Пользователи",open:r,options:a,value:p,onChange:A})})}};var ze,Ke,Ye;ye.parameters={...ye.parameters,docs:{...(ze=ye.parameters)==null?void 0:ze.docs,source:{originalSource:`{
  render: function Render(args: Args, {
    globals: {
      locale
    }
  }: StoryContext<unknown>) {
    const [options, setOptions] = useState<User[]>([]);
    const [loading, setLoading] = useState(false);
    const [user, setUser] = useState<User | null>(null);
    const [users, setUsers] = useState<User[]>([]);
    const [search, setSearch] = useState('');
    const onChange = (user: User | null) => {
      setUser(user);
      if (args.inlineSearch && user) {
        setSearch(user.name);
      }
    };
    const onChangeUsers = (users: User[]) => {
      setUsers(users);
    };
    useEffect(() => {
      setOptions(USERS[locale as 'en' | 'ru']);
      setSearch('');
      setLoading(false);
    }, [locale]);
    const timeout = useRef<ReturnType<typeof setTimeout> | null>(null);
    useEffect(() => {
      setLoading(true);
      timeout.current = setTimeout(() => {
        setOptions(USERS[locale as 'en' | 'ru'].filter(e => e.name.toLowerCase().includes(search.toLowerCase())));
        setLoading(false);
      }, 1000);
      return () => {
        if (timeout.current) {
          clearTimeout(timeout.current);
          timeout.current = null;
        }
      };
    }, [search]);
    const props: Pick<AutocompleteFieldProps<any>, 'closeAfterSelect' | 'disabled' | 'error' | 'inlineSearch' | 'header' | 'footer' | 'fullWidth' | 'getOptionLabel' | 'getOptionValue' | 'helperText' | 'loading' | 'options' | 'placeholder' | 'required' | 'size' | 'InputProps' | 'onBlur'> = {
      closeAfterSelect: args.closeAfterSelect,
      disabled: args.disabled,
      error: args.error,
      header: args.header && <AutocompleteMenuHeader>{args.header}</AutocompleteMenuHeader>,
      footer: args.footer && <AutocompleteMenuFooter>{args.footer}</AutocompleteMenuFooter>,
      fullWidth: true,
      inlineSearch: args.inlineSearch,
      getOptionLabel: getUserLabel,
      getOptionValue: getUserValue,
      helperText: args.helperText,
      loading,
      options,
      placeholder: args.placeholder,
      required: args.required,
      size: args.size,
      InputProps: {
        SearchProps: {
          value: search,
          onChange: e => setSearch(e.target.value)
        }
      },
      onBlur: args.onBlur
    };
    return <Box sx={{
      maxWidth: '500px'
    }}>
        {args.multiple ? <AutocompleteField<User> multiple label={locale === 'en' ? 'Users' : 'Пользователи'} value={users} onChange={onChangeUsers} {...props} /> : <AutocompleteField label={locale === 'en' ? 'Users' : 'Пользователи'} value={user} onChange={onChange} {...props} />}
      </Box>;
  }
}`,...(Ye=(Ke=ye.parameters)==null?void 0:Ke.docs)==null?void 0:Ye.source}}};var Je,Xe,Qe,Ze,et;he.parameters={...he.parameters,docs:{...(Je=he.parameters)==null?void 0:Je.docs,source:{originalSource:`{
  render: function Render(args: Args, {
    globals: {
      locale
    }
  }: StoryContext<unknown>) {
    const [options, setOptions] = useState<User[]>([]);
    const [users, setUsers] = useState<User[]>([]);
    const onChangeUsers = (users: User[]) => {
      setUsers(users);
    };
    useEffect(() => {
      setOptions(USERS[locale as 'en' | 'ru']);
    }, [locale]);
    return <Box sx={{
      maxWidth: '500px'
    }}>
        <AutocompleteField<User> fullWidth multiple MenuGroupProps={{
        paddingBottom: args.MenuGroupPaddingBottom,
        sticky: args.MenuGroupSticky
      }} getOptionLabel={getUserLabel} getOptionValue={getUserValue} groupBy={user => {
        const base = Math.floor(user.id / 10);
        return \`\${base * 10} - \${(base + 1) * 10 - 1}\`;
      }} label={locale === 'en' ? 'Users' : 'Пользователи'} options={options} value={users} onChange={onChangeUsers} />
      </Box>;
  }
}`,...(Qe=(Xe=he.parameters)==null?void 0:Xe.docs)==null?void 0:Qe.source},description:{story:"We can group the options with the `groupBy` prop. Make sure that the options are also sorted with the same dimension that they are grouped by, otherwise, you will notice duplicate headers.",...(et=(Ze=he.parameters)==null?void 0:Ze.docs)==null?void 0:et.description}}};var tt,ot,nt;be.parameters={...be.parameters,docs:{...(tt=be.parameters)==null?void 0:tt.docs,source:{originalSource:`{
  render: function Render(_args: Args, {
    globals: {
      locale
    }
  }: StoryContext<unknown>) {
    const [options, setOptions] = useState<User[]>([]);
    const [users, setUsers] = useState<User[]>([]);
    const onChangeUsers = (users: User[]) => {
      setUsers(users);
    };
    useEffect(() => {
      setOptions(USERS[locale as 'en' | 'ru']);
    }, [locale]);
    return <Box sx={{
      maxWidth: '500px'
    }}>
        <AutocompleteField<User> fullWidth multiple getDisplayValue={getUsersDisplayValue} getOptionLabel={getUserLabelReactNode} getOptionValue={getUserValue} label={locale === 'en' ? 'Users' : 'Пользователи'} options={options} value={users} onChange={onChangeUsers} />
      </Box>;
  }
}`,...(nt=(ot=be.parameters)==null?void 0:ot.docs)==null?void 0:nt.source}}};var lt,st,rt;ve.parameters={...ve.parameters,docs:{...(lt=ve.parameters)==null?void 0:lt.docs,source:{originalSource:`{
  render: function Render(_args: Args, {
    globals: {
      locale
    }
  }: StoryContext<unknown>) {
    const [open, setOpen] = useState(false);
    const [options, setOptions] = useState<User[]>([]);
    const [users, setUsers] = useState<User[]>([]);
    const onChangeUsers = (users: User[]) => {
      setUsers(users);
    };
    useEffect(() => {
      setOptions(USERS[locale as 'en' | 'ru']);
    }, [locale]);
    return <Box sx={{
      maxWidth: '500px'
    }}>
        <AutocompleteField<User> fullWidth multiple InputProps={{
        onOpen: () => setOpen(true),
        onClose: () => setOpen(false)
      }} getOptionLabel={getUserLabel} getOptionValue={getUserValue} label={locale === 'en' ? 'Users' : 'Пользователи'} open={open} options={options} value={users} onChange={onChangeUsers} />
      </Box>;
  }
}`,...(rt=(st=ve.parameters)==null?void 0:st.docs)==null?void 0:rt.source}}};const jn=["Demo","Groups","Customization","Controlled"];export{ve as Controlled,be as Customization,ye as Demo,he as Groups,jn as __namedExportsOrder,Dn as default};

import{j as o}from"./jsx-runtime-BoZ7yaty.js";import{c as E}from"./clsx.m-C7bORDfW.js";import{a as F,g as I,s as V,c as S}from"./generateUtilityClasses-D4qQEpRV.js";import{b as j}from"./useThemeProps-DJft-tfL.js";import{I as _,a as q}from"./IconEyeOff-khNBK87M.js";import{u as R}from"./useControlled-DdQm0pQX.js";import{I as H,i as D}from"./InputAdornment-50D-p4wJ.js";import{T as N}from"./Tooltip-JjMSGEEd.js";import{B as A,b as U}from"./Button-Kloa1MkC.js";import{T as $,t as M,o as k,a as B}from"./TextField-BNsw1mhy.js";import"./index-DIDRz_s2.js";import"./_commonjsHelpers-gnU0ypJ3.js";import"./SvgIcon-DnRBQAn1.js";import"./SvgIcon.classes-CqsHNf3G.js";import"./clsx-B-dksMZM.js";import"./useFormControl-Crkhef2u.js";import"./Typography-BriYb5H6.js";import"./useTheme-LlnDz48U.js";import"./Fade-CJiQNbBq.js";import"./utils-Cq59Lonh.js";import"./TransitionGroupContext-DaV7NuBA.js";import"./index-BqLR6Ykc.js";import"./index-B9nU-LZm.js";import"./useForkRef-B4JCUkpP.js";import"./useTimeout-CS-EPZZq.js";import"./useControlled-ew9sXcp7.js";import"./useId-Dx6QqNEU.js";import"./useEvent-B4f6aq-e.js";import"./useIsFocusVisible-moa6TI2l.js";import"./useForkRef-DJnV46t9.js";import"./appendOwnerState-B9NMWNaQ.js";import"./Popper-BXVPFJIb.js";import"./ownerDocument-DW-IO8s5.js";import"./Portal-DAw-RMf5.js";import"./useEnhancedEffect-BGNjlb7u.js";import"./useSlotProps-Dpc6KwLu.js";import"./ButtonBase-B9dD5NpA.js";import"./formControlState-Dq1zat_P.js";import"./FormControl-7QajZyzq.js";import"./isMuiElement-WSaQkCi4.js";import"./ownerWindow-HkKU3E4x.js";import"./debounce-Be36O1Ab.js";import"./GlobalStyles-7TZ7H8GY.js";import"./Menu-BU22523T.js";import"./index-CbLA2MxP.js";import"./Popover-DMugHk6X.js";import"./getOverlayAlpha-VE_eitC7.js";import"./Grow-E4hGvhFy.js";import"./Modal-RUXrZPLp.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./useEventCallback-B5h_k30D.js";import"./createChainedFunction-BO_9K8Jh.js";import"./FocusTrap-D5YxnQCr.js";import"./MenuList-Ccyljjh3.js";import"./createSvgIcon-DaHYJ09t.js";import"./SvgIcon-DeOyXKlF.js";import"./FormHelperText-DjxYqVYo.js";function L(e){return F("ESPasswordField",e)}I("ESPasswordField",["root"]);const O=e=>{const{classes:s}=e;return S({root:["root"]},L,s)},z=V($,{name:"ESPasswordField",slot:"Root",overridesResolver:(e,s)=>s.root})(({theme:e})=>({[`.${k.root}.${B.adornedEnd}`]:{paddingRight:"0px"},[`&.${M.root}`]:{[`& .${D.positionEnd}`]:{paddingRight:"7px",[`& .${U.root}`]:{"--icon":e.vars.palette.monoA.A500}}}})),i=e=>{const{classes:s,className:l,visible:w,onVisibilityChange:n,labelHidePassword:p,labelShowPassword:d,iconHidePassword:f=o.jsx(_,{}),iconShowPassword:b=o.jsx(q,{}),InputProps:h,TooltipProps:P,...g}=j({props:e,name:"ESPasswordField"}),[t,y]=R(!1,w),v=()=>{y(!t),n&&n(!t)},x=a=>{a.preventDefault()},C=a=>{a.preventDefault()},T=O({classes:s});return o.jsx(z,{InputProps:{endAdornment:o.jsx(H,{position:"end",children:o.jsx(N,{arrow:!0,disableInteractive:!0,placement:"top-end",title:t?p:d,...P,children:o.jsx(A,{rounded:!0,"aria-label":t?p:d,onClick:v,onMouseDown:x,onMouseUp:C,children:t?f:b})})}),...h},className:E(T.root,l),classes:s,type:t?"text":"password",...g})};try{i.displayName="PasswordField",i.__docgenInfo={description:"The PasswordField allows users to input passwords with ability to toggle password visibility.",displayName:"PasswordField",props:{visible:{defaultValue:null,description:"If true, the password is visible.",name:"visible",required:!1,type:{name:"boolean"}},onVisibilityChange:{defaultValue:null,description:"Callback fired when user changes password visibility.",name:"onVisibilityChange",required:!1,type:{name:"((visible: boolean) => void)"}},labelHidePassword:{defaultValue:null,description:"Text for the toggle button aria-label when password is visible.",name:"labelHidePassword",required:!1,type:{name:"string"}},labelShowPassword:{defaultValue:null,description:"Text for the toggle button aria-label when password is hidden.",name:"labelShowPassword",required:!1,type:{name:"string"}},iconHidePassword:{defaultValue:null,description:"Icon for the toggle button when password is visible.",name:"iconHidePassword",required:!1,type:{name:"ReactNode"}},iconShowPassword:{defaultValue:null,description:"Icon for the toggle button when password is hidden.",name:"iconShowPassword",required:!1,type:{name:"ReactNode"}},TooltipProps:{defaultValue:null,description:"Props applied to the Tooltip components.",name:"TooltipProps",required:!1,type:{name:"Partial<TooltipProps>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}const We={tags:["autodocs"],component:i,parameters:{references:["PasswordField"]},argTypes:{focused:{table:{disable:!0}},hiddenLabel:{table:{disable:!0}},margin:{table:{disable:!0}}}},r={render:e=>o.jsx(i,{...e})};var m,u,c;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: args => {
    return <PasswordField {...args} />;
  }
}`,...(c=(u=r.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};const Xe=["Demo"];export{r as Demo,Xe as __namedExportsOrder,We as default};

import{j as o}from"./jsx-runtime-BoZ7yaty.js";import{r as k}from"./index-DIDRz_s2.js";import{c as P}from"./clsx.m-C7bORDfW.js";import{g as A,a as H,s as r,c as W}from"./generateUtilityClasses-D4qQEpRV.js";import{b as D,c as h}from"./useThemeProps-DJft-tfL.js";import{u as Q}from"./useForkRef-DJnV46t9.js";import{I as Y,a as Z,b as ee,c as j}from"./IconInformation2W500-t6cAxLSD.js";import{b as p,B as C}from"./Button-Kloa1MkC.js";import{b as $}from"./ButtonBase-B9dD5NpA.js";import{s as T}from"./SvgIcon.classes-CqsHNf3G.js";import{I as z}from"./IconCloseW350-n8Wl4xK7.js";import"./_commonjsHelpers-gnU0ypJ3.js";import"./SvgIcon-DnRBQAn1.js";function se(e){return H("ESSnackbar",e)}const a=A("ESSnackbar",["root","progress","content","icon","message","actions","severitySuccess","severityWarning","severityError","severityInfo","severityDefault","colorSuccess","colorWarning","colorError","colorInfo","colorMonoA","sizeS","sizeM","sizeL","sizeXl"]),oe=e=>{const{classes:s,severity:i,color:d,size:u}=e,m={root:["root",`severity${h(i)}`,`color${h(d)}`,`size${h(u)}`],progress:["progress"],content:["content"],icon:["icon"],message:["message"],actions:["actions"]};return W(m,se,s)},ae=r("div",{name:"ESSnackbar",slot:"Root",overridesResolver:(e,s)=>s.root})(({theme:e})=>({position:"relative",backdropFilter:"blur(25px)",borderRadius:"6px",color:e.vars.palette.monoB[500],overflow:"hidden",variants:[{props:{color:"monoA"},style:{backgroundColor:e.vars.palette.monoA.A800}},{props:{color:"success"},style:{backgroundColor:e.vars.palette.success[300]}},{props:{color:"warning"},style:{backgroundColor:e.vars.palette.warning[300]}},{props:{color:"error"},style:{backgroundColor:e.vars.palette.error[300]}},{props:{color:"info"},style:{backgroundColor:e.vars.palette.info[300]}},{props:{size:"s"},style:{minHeight:"32px",maxWidth:"max-content",[`& .${a.message}`]:{"&:first-of-type":{paddingLeft:"12px"}},[`& .${a.actions}`]:{padding:"4px 4px 4px 8px"}}},{props:{size:"m"},style:{minHeight:"40px",[`& .${a.icon}`]:{padding:"8px 6px 8px 8px"},[`& .${a.message}`]:{"&:first-of-type":{paddingLeft:"12px"}},[`& .${a.actions}`]:{gap:"4px",padding:"4px 4px 4px 16px"}}},{props:{size:"l"},style:{minHeight:"48px",[`& .${a.icon}`]:{padding:"12px 8px 12px 12px"},[`& .${a.message}`]:{"&:first-of-type":{paddingLeft:"12px"}},[`& .${a.actions}`]:{gap:"8px",padding:"8px 8px 8px 16px",[`& .${p.variantText}.${p.colorMonoB}`]:{...e.typography.body100Medium,"--background":e.vars.palette.monoB.A100,"--text":e.vars.palette.monoB[500],[`&.${p.size400} .${$.wrapper}`]:{padding:"0 12px",[`& > .${T.root}`]:{margin:"0 -8px"}}}}}},{props:{size:"xl"},style:{minHeight:"56px",[`& .${a.icon}`]:{padding:"16px 8px 16px 16px"},[`& .${a.message}`]:{"&:first-of-type":{paddingLeft:"16px"}},[`& .${a.actions}`]:{gap:"8px",padding:"12px 12px 12px 16px",[`& .${p.variantText}.${p.colorMonoB}`]:{...e.typography.body100Medium,"--background":e.vars.palette.monoB.A100,"--text":e.vars.palette.monoB[500],[`&.${p.size400} .${$.wrapper}`]:{padding:"0 12px",[`& > .${T.root}`]:{margin:"0 -8px"}}}}}}]})),re=r("div",{name:"ESSnackbar",slot:"Progress",overridesResolver:(e,s)=>s.progress})(({theme:e})=>({position:"absolute",left:0,top:0,bottom:0,zIndex:1,width:"var(--ESSnackbar-progress, 100%)",transition:"var(--ESSnackbar-transition, none)",backgroundColor:e.vars.palette.monoB.A100})),ne=r("div",{name:"ESSnackbar",slot:"Content",overridesResolver:(e,s)=>s.content})({position:"relative",display:"flex",alignItems:"center",zIndex:2}),te=r("div",{name:"ESSnackbar",slot:"Icon",overridesResolver:(e,s)=>s.icon})({display:"flex"}),ie=r("div",{name:"ESSnackbar",slot:"Message",overridesResolver:(e,s)=>s.message})(({theme:e})=>({...e.typography.caption,padding:"4px 0",minWidth:0,wordBreak:"break-word","&:first-of-type":{paddingLeft:"12px"}})),le=r("div",{name:"ESSnackbar",slot:"Actions",overridesResolver:(e,s)=>s.actions})(()=>({alignItems:"center",display:"flex",marginLeft:"auto"})),ce={default:"monoA",success:"success",warning:"warning",error:"error",info:"info"},pe={default:o.jsx(j,{}),success:o.jsx(j,{}),warning:o.jsx(ee,{}),error:o.jsx(Z,{}),info:o.jsx(Y,{})},g=k.forwardRef(function(s,i){const{className:d,sx:u,message:m,icon:f,autoHideDuration:l,persist:x,progress:S,severity:n="default",color:O,size:E="m",colorMapping:F=ce,iconMapping:X=pe,action:I,onClose:w,...G}=D({props:s,name:"ESSnackbar"}),t=k.useRef(null),J=Q(t,i);k.useEffect(()=>{if(!x&&l){setTimeout(()=>{t.current&&(t.current.style.setProperty("--ESSnackbar-transition",`${l}ms linear`),t.current.style.setProperty("--ESSnackbar-progress","0%"))},1);const K=setTimeout(()=>{w&&w()},l);return()=>{t.current&&(t.current.style.setProperty("--ESSnackbar-transition","none"),t.current.style.setProperty("--ESSnackbar-progress","100%")),clearTimeout(K)}}},[x,l]);const R={severity:n,color:O||F[n],...G,size:E},c=oe(R);return o.jsxs(ae,{ref:J,className:P(c.root,d),ownerState:R,sx:u,children:[S&&o.jsx(re,{className:c.progress}),o.jsxs(ne,{className:c.content,children:[E!=="s"&&f!==!1&&o.jsx(te,{className:c.icon,children:f||X[n]}),o.jsx(ie,{className:c.message,children:m}),o.jsx(le,{className:c.actions,children:!!I&&I})]})]})});try{g.displayName="Snackbar",g.__docgenInfo={description:"Snackbar is used for brief notifications of processes that have been or will be performed.",displayName:"Snackbar",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SnackbarClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},message:{defaultValue:null,description:"",name:"message",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"The icon to display.",name:"icon",required:!1,type:{name:"ReactNode"}},action:{defaultValue:null,description:"The action to display. It renders after the message, at the end of the snackbar.",name:"action",required:!1,type:{name:"ReactNode"}},autoHideDuration:{defaultValue:null,description:"",name:"autoHideDuration",required:!1,type:{name:"number"}},persist:{defaultValue:null,description:"Snackbar stays on the screen, unless it is dismissed.",name:"persist",required:!1,type:{name:"boolean"}},progress:{defaultValue:null,description:"If true, the hide progress is shown.",name:"progress",required:!1,type:{name:"boolean"}},severity:{defaultValue:{value:"'default'"},description:"The severity of the snackbar. This defines the color and icon used.",name:"severity",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"error"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'}]}},color:{defaultValue:null,description:"The color of the component. Unless provided, the value is taken from the `severity` prop.",name:"color",required:!1,type:{name:"enum",value:[{value:'"error"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'},{value:'"monoA"'}]}},size:{defaultValue:{value:"'40'"},description:"The size of the component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"m"'},{value:'"s"'},{value:'"xl"'},{value:'"l"'}]}},colorMapping:{defaultValue:null,description:`The component maps the severity prop to a range of different icons.
If you wish to change this mapping, you can provide your own.`,name:"colorMapping",required:!1,type:{name:"Record<SnackbarPropsSeverity, SnackbarPropsColor>"}},iconMapping:{defaultValue:null,description:`The component maps the severity prop to a range of different icons.
If you wish to change this mapping, you can provide your own.`,name:"iconMapping",required:!1,type:{name:"Record<SnackbarPropsSeverity, ReactNode>"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(() => void)"}}}}}catch{}function de(e){return H("ESSnackbarClose",e)}A("ESSnackbarClose",["root","progress"]);const ue=e=>{const{classes:s}=e;return W({root:["root"],button:["button"],progress:["progress"]},de,s)},me=r("div",{name:"ESSnackbarClose",slot:"Root",overridesResolver:(e,s)=>s.root})({borderRadius:"4px",overflow:"hidden",position:"relative"}),ge=r(C,{name:"ESSnackbarClose",slot:"Root",overridesResolver:(e,s)=>s.button})({zIndex:1}),fe=r("div",{name:"ESSnackbarClose",slot:"Progress",overridesResolver:(e,s)=>s.progress})(({theme:e})=>({position:"absolute",left:0,top:0,bottom:0,width:"var(--ESSnackbar-progress, 100%)",transition:"var(--ESSnackbar-transition, none)",backgroundColor:e.vars.palette.monoB.A200,zIndex:0})),y=e=>{const{className:s,label:i,icon:d=o.jsx(z,{}),sx:u,size:m="400",progress:f,onClick:l,...x}=D({props:e,name:"ESSnackbarClose"}),S={...x},n=ue(S);return o.jsxs(me,{className:P(n.root,s),children:[o.jsx(ge,{"aria-label":i,className:n.button,color:"monoB",size:m,sx:u,onClick:l,children:d}),f&&o.jsx(fe,{className:n.progress})]})};try{y.displayName="SnackbarClose",y.__docgenInfo={description:"",displayName:"SnackbarClose",props:{sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SnackbarCloseClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Text for the button aria-label.",name:"label",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Icon for the button.",name:"icon",required:!1,type:{name:"ReactNode"}},size:{defaultValue:{value:"'400'"},description:"The size of the component.",name:"size",required:!1,type:{name:"enum",value:[{value:'"100"'},{value:'"200"'},{value:'"300"'},{value:'"400"'},{value:'"500"'},{value:'"600"'},{value:'"700"'},{value:'"800"'},{value:'"900"'},{value:'"1000"'}]}},progress:{defaultValue:null,description:"If true, the hide progress is shown.",name:"progress",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLButtonElement>"}}}}}catch{}const L=e=>e.globals.locale==="en"?"Message":"Сообщение",U=e=>e.globals.locale==="en"?"Cancel":"Отменить",je={tags:["autodocs"],component:g,parameters:{references:["Snackbar","SnackbarClose"]},argTypes:{message:{control:{type:"text"}},size:{control:"radio",options:["s","m","l","xl"]},icon:{table:{disable:!0}},progress:{table:{disable:!0}},colorMapping:{table:{disable:!0}},action:{table:{disable:!0}}},args:{}},v={render:(e,s)=>o.jsx(g,{...e,action:o.jsxs(o.Fragment,{children:[o.jsx(C,{color:"monoB",size:e.size==="s"?"300":"400",variant:"text",children:U(s)}),o.jsx(y,{icon:e.size==="s"?o.jsx(z,{container:!0,containerSize:"20px"}):void 0,progress:!!e.autoHideDuration,size:e.size==="s"?"300":void 0})]}),message:e.message||L(s)})},b={render:(e,s)=>o.jsx(g,{...e,action:o.jsxs(o.Fragment,{children:[o.jsx(C,{color:"monoB",size:e.size==="s"?"300":"400",variant:"text",children:U(s)}),o.jsx(y,{icon:e.size==="s"?o.jsx(z,{container:!0,containerSize:"20px"}):void 0,size:e.size==="s"?"300":void 0})]}),message:e.message||L(s),progress:!!e.autoHideDuration})};var B,N,q;v.parameters={...v.parameters,docs:{...(B=v.parameters)==null?void 0:B.docs,source:{originalSource:`{
  render: (args, context) => {
    return <Snackbar {...args} action={<>
            <Button color="monoB" size={args.size === 's' ? '300' : '400'} variant="text">
              {getCancelText(context)}
            </Button>
            <SnackbarClose icon={args.size === 's' ? <IconCloseW350 container containerSize="20px" /> : undefined} progress={!!args.autoHideDuration} size={args.size === 's' ? '300' : undefined} />
          </>} message={args.message || getMessage(context)} />;
  }
}`,...(q=(N=v.parameters)==null?void 0:N.docs)==null?void 0:q.source}}};var M,V,_;b.parameters={...b.parameters,docs:{...(M=b.parameters)==null?void 0:M.docs,source:{originalSource:`{
  render: (args, context) => {
    return <Snackbar {...args} action={<>
            <Button color="monoB" size={args.size === 's' ? '300' : '400'} variant="text">
              {getCancelText(context)}
            </Button>
            <SnackbarClose icon={args.size === 's' ? <IconCloseW350 container containerSize="20px" /> : undefined} size={args.size === 's' ? '300' : undefined} />
          </>} message={args.message || getMessage(context)} progress={!!args.autoHideDuration} />;
  }
}`,...(_=(V=b.parameters)==null?void 0:V.docs)==null?void 0:_.source}}};const $e=["Demo","ProgressOnContainer"];export{v as Demo,b as ProgressOnContainer,$e as __namedExportsOrder,je as default};

import{j as u}from"./jsx-runtime-BoZ7yaty.js";import{r as E}from"./index-DIDRz_s2.js";import{c as $}from"./clsx.m-C7bORDfW.js";import{a as x,g as B,s as b,c as A,k as P}from"./generateUtilityClasses-D4qQEpRV.js";import{b as I,c as o}from"./useThemeProps-DJft-tfL.js";import"./_commonjsHelpers-gnU0ypJ3.js";function R(r){return x("ESLinearProgress",r)}B("ESLinearProgress",["root","loading","determinate","indeterminate","buffer","colorPrimary","colorSecondary","colorMonoA","colorMonoB","colorWarning","colorError","colorSuccess","colorInfo","colorBlack","colorWhite","dashed","dashedColorPrimary","dashedColorSecondary","dashedColorMonoA","dashedColorMonoB","dashedColorWarning","dashedColorError","dashedColorSuccess","dashedColorInfo","dashedColorBlack","dashedColorWhite","barColorPrimary","barColorSecondary","barColorMonoA","barColorMonoB","barColorWarning","barColorError","barColorSuccess","barColorInfo","barColorBlack","barColorWhite","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","bar2Indeterminate","bar2Buffer","loadingIndicator"]);const g=4,T=P`
  0% {
    left: -35%;
    right: 100%;
  }

  60% {
    left: 100%;
    right: -90%;
  }

  100% {
    left: 100%;
    right: -90%;
  }
`,N=P`
  0% {
    left: -200%;
    right: 100%;
  }

  60% {
    left: 107%;
    right: -8%;
  }

  100% {
    left: 107%;
    right: -8%;
  }
`,q=r=>{const{classes:a,variant:e,color:t}=r,v={root:["root",`color${o(t)}`,e],dashed:["dashed",`dashedColor${o(t)}`],bar1:["bar",`barColor${o(t)}`,e==="indeterminate"&&"bar1Indeterminate",e==="determinate"&&"bar1Determinate",e==="buffer"&&"bar1Buffer"],bar2:["bar",e!=="buffer"&&`barColor${o(t)}`,e==="buffer"&&`color${o(t)}`,e==="indeterminate"&&"bar2Indeterminate",e==="buffer"&&"bar2Buffer"]};return A(v,R,a)},_=b("span",{name:"ESLinearProgress",slot:"Root",overridesResolver:(r,a)=>{const{ownerState:e}=r;return[a.root,a[`color${o(e.color)}`],a[e.variant]]}})(({theme:r})=>({position:"relative",overflow:"hidden",display:"block",height:"var(--ESLinearProgress-width)",borderRadius:"calc(var(--ESLinearProgress-width) / 2)",zIndex:0,"@media print":{colorAdjust:"exact"},backgroundColor:r.vars.palette.monoA.A200,variants:[{props:{color:"inherit",variant:"indeterminate"},style:{backgroundColor:"none","&::before":{content:'""',position:"absolute",left:0,top:0,right:0,bottom:0,backgroundColor:"transparent",opacity:.3}}},{props:{color:"inherit",variant:"determinate"},style:{backgroundColor:"none","&::before":{content:'""',position:"absolute",left:0,top:0,right:0,bottom:0,backgroundColor:"transparent",opacity:.3}}},{props:{variant:"buffer"},style:{backgroundColor:"transparent"}}]})),V=b("span",{name:"ESLinearProgress",slot:"Dashed",overridesResolver:(r,a)=>{const{ownerState:e}=r;return[a.dashed,a[`dashedColor${o(e.color)}`]]}})(({theme:r})=>{const a=r.vars.palette.monoA.A200;return{position:"absolute",marginTop:0,height:"100%",width:"100%",backgroundImage:`radial-gradient(${a} 0%, ${a} 20%, transparent 0%)`,backgroundSize:"calc(var(--ESLinearProgress-width) * 3) calc(var(--ESLinearProgress-width) * 3)",backgroundPosition:"0 calc(var(--ESLinearProgress-width) * 2)",variants:[{props:{color:"inherit"},style:{opacity:.3}}]}}),j=b("span",{name:"ESLinearProgress",slot:"Bar1",overridesResolver:(r,a)=>{const{ownerState:e}=r;return[a.bar,a[`barColor${o(e.color)}`],(e.variant==="indeterminate"||e.variant==="query")&&a.bar1Indeterminate,e.variant==="determinate"&&a.bar1Determinate,e.variant==="buffer"&&a.bar1Buffer]}})(({theme:r})=>({width:"100%",position:"absolute",left:0,bottom:0,top:0,transition:"transform 0.2s linear",transformOrigin:"left",borderRadius:"calc(var(--ESLinearProgress-width) / 2)",backgroundColor:"currentColor",variants:[{props:{color:"primary"},style:{backgroundColor:r.vars.palette.primary[300]}},{props:{color:"secondary"},style:{backgroundColor:r.vars.palette.secondary[300]}},{props:{color:"error"},style:{backgroundColor:r.vars.palette.error[300]}},{props:{color:"warning"},style:{backgroundColor:r.vars.palette.warning[300]}},{props:{color:"info"},style:{backgroundColor:r.vars.palette.info[300]}},{props:{color:"success"},style:{backgroundColor:r.vars.palette.success[300]}},{props:{variant:"determinate"},style:{transition:`transform .${g}s linear`}},{props:{variant:"buffer"},style:{zIndex:1,transition:`transform .${g}s linear`}},{props:{variant:"indeterminate"},style:{width:"auto",animation:`${T} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`}}]})),D=b("span",{name:"ESLinearProgress",slot:"Bar2",overridesResolver:(r,a)=>{const{ownerState:e}=r;return[a.bar,a[`barColor${o(e.color)}`],(e.variant==="indeterminate"||e.variant==="query")&&a.bar2Indeterminate,e.variant==="buffer"&&a.bar2Buffer]}})(({theme:r})=>({width:"100%",position:"absolute",left:0,bottom:0,top:0,transition:`transform .${g}s linear`,transformOrigin:"right",borderRadius:"calc(var(--ESLinearProgress-width) / 2)",variants:[{props:{variant:"determinate",color:"inherit"},style:{backgroundColor:"currentColor"}},{props:{variant:"determinate",color:"primary"},style:{backgroundColor:r.vars.palette.primary.A400}},{props:{variant:"determinate",color:"secondary"},style:{backgroundColor:r.vars.palette.secondary.A400}},{props:{variant:"determinate",color:"error"},style:{backgroundColor:r.vars.palette.error.A400}},{props:{variant:"determinate",color:"warning"},style:{backgroundColor:r.vars.palette.warning.A400}},{props:{variant:"determinate",color:"info"},style:{backgroundColor:r.vars.palette.info.A400}},{props:{variant:"determinate",color:"success"},style:{backgroundColor:r.vars.palette.success.A400}},{props:{variant:"buffer"},style:{backgroundColor:r.vars.palette.monoA.A200}},{props:{variant:"indeterminate"},style:{width:"auto",animation:`${N} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`}},{props:{variant:"indeterminate"},style:{transition:"transform 0.2s linear"}}]})),m=E.forwardRef(function(a,e){const t=I({props:a,name:"ESLinearProgress"}),{className:v,width:h=4,color:S="primary",value:l,valueBuffer:i,variant:d="indeterminate",...k}=t,c={...t,color:S,variant:d,width:h},p=q(c),L={},n={bar1:{},bar2:{},dashed:{}};if(d==="determinate"||d==="buffer"){if(l!==void 0&&l<=100){const s=l-100;n.bar1={transform:`translateX(${s}%)`}}if(i!==void 0&&i<=100){const s=(i||0)-100;n.bar2={transform:`translateX(${s}%)`}}}if(d==="buffer"){if(l!==void 0){const s=l;n.dashed={transform:`translateX(${s}%)`}}if(i!==void 0){const s=i;n.dashed={transform:`translateX(${s}%)`}}}return u.jsxs(_,{className:$(p.root,v),ownerState:c,role:"progressbar",style:{"--ESLinearProgress-width":`${h}px`},...L,ref:e,...k,children:[d==="buffer"?u.jsx(V,{className:p.dashed,ownerState:c,style:n.dashed}):null,u.jsx(j,{className:p.bar1,ownerState:c,style:n.bar1}),i&&u.jsx(D,{className:p.bar2,ownerState:c,style:n.bar2})]})});try{m.displayName="LinearProgress",m.__docgenInfo={description:"Express an unspecified wait time or display the length of a process.",displayName:"LinearProgress",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<LinearProgressClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"inherit"'},{value:'"primary"'},{value:'"secondary"'},{value:'"error"'},{value:'"warning"'},{value:'"info"'},{value:'"success"'}]}},value:{defaultValue:null,description:`The value of the progress indicator for the determinate and buffer variants.
Value between 0 and 100.`,name:"value",required:!1,type:{name:"number"}},valueBuffer:{defaultValue:null,description:`The value for the buffer variant.
Value between 0 and 100.`,name:"valueBuffer",required:!1,type:{name:"number"}},variant:{defaultValue:{value:"'indeterminate'"},description:`The variant to use.
Use indeterminate or query when there is no progress value.`,name:"variant",required:!1,type:{name:"enum",value:[{value:'"indeterminate"'},{value:'"determinate"'},{value:'"buffer"'}]}},width:{defaultValue:{value:"4"},description:"The width of the progress line.",name:"width",required:!1,type:{name:"number"}}}}}catch{}const K={tags:["autodocs"],component:m,parameters:{references:["LinearProgress"]},argTypes:{variant:{control:{type:"select"}},color:{control:{type:"select"}}},args:{variant:"indeterminate",color:"primary",valueBuffer:50,value:20}},f={render:r=>u.jsx(m,{...r})};var y,C,w;f.parameters={...f.parameters,docs:{...(y=f.parameters)==null?void 0:y.docs,source:{originalSource:`{
  render: args => {
    return <LinearProgress {...args} />;
  }
}`,...(w=(C=f.parameters)==null?void 0:C.docs)==null?void 0:w.source}}};const F=["Demo"];export{f as Demo,F as __namedExportsOrder,K as default};

import{j as i}from"./jsx-runtime-BoZ7yaty.js";import{r as T}from"./index-DIDRz_s2.js";import{c as r}from"./clsx.m-C7bORDfW.js";import{g as S,a as q,s as C,c as E}from"./generateUtilityClasses-D4qQEpRV.js";import{b as P}from"./useThemeProps-DJft-tfL.js";import{I as w,a as M,b as N}from"./IconQuestionLine-lypVt2If.js";import{I as A}from"./IconInformationFillW200-DauvLUv5.js";function R(e){return q("ESInformationIcon",e)}const c=S("ESInformationIcon",["root","info","question","icon","activeIcon"]),V=e=>{const{classes:o,variant:n}=e;return E({root:["root",n],icon:["icon"],activeIcon:["activeIcon"]},R,o)},_=C("div",{name:"ESInformationIcon",slot:"Root",overridesResolver:(e,o)=>{const{ownerState:{variant:n}}=e;return[o.root,o[n]]}})(({theme:e})=>({boxSizing:"border-box",WebkitTapHighlightColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,userSelect:"none",verticalAlign:"middle",MozAppearance:"none",WebkitAppearance:"none",textDecoration:"none",overflow:"hidden",background:"none",color:e.vars.palette.monoA.A300,cursor:"help",display:"inline-flex","&::-moz-focus-inner":{borderStyle:"none"},"&:focus":{outline:"none"},"& svg path:nth-of-type(2)":{color:e.vars.palette.monoA.A400},[`& .${c.activeIcon}`]:{display:"none"},"&:hover, &:focus-visible, &[aria-describedby]":{[`& .${c.icon}`]:{display:"none"},[`& .${c.activeIcon}`]:{display:"inline-flex"}},variants:[{props:{variant:"info"},style:{"&:hover, &:focus-visible, &[aria-describedby]":{color:e.vars.palette.info[300],"& svg path:nth-of-type(2)":{fill:e.vars.palette.monoB[500]}}}},{props:{variant:"question"},style:{"&:hover, &:focus-visible, &[aria-describedby]":{color:e.vars.palette.secondary[300],"& svg path:nth-of-type(2)":{fill:e.vars.palette.monoB[500]}}}}]})),k={info:M,question:w},j={info:A,question:N},f=T.forwardRef(function(o,n){var m,d;const{component:l,classes:u,className:v,sx:I,variant:t="info",iconMapping:y=k,activeIconMapping:h=j,slotProps:a={},...g}=P({props:o,name:"ESInformationIcon"}),p={classes:u,variant:t},s=V(p),x=y[t],b=h[t];return i.jsxs(_,{ref:n,className:r(s.root,v),ownerState:p,sx:I,tabIndex:0,...g,as:l,children:[i.jsx(x,{container:!0,containerSize:"16px",...a.icon,className:r(s.icon,(m=a.icon)==null?void 0:m.className)}),i.jsx(b,{container:!0,containerSize:"16px",...a.activeIcon,className:r(s.activeIcon,(d=a.activeIcon)==null?void 0:d.className)})]})});try{f.displayName="InformationIcon",f.__docgenInfo={description:"This component is for displaying information icon.",displayName:"InformationIcon",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<InformationIconClasses> & Partial<ClassNameMap<never>>)"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"'info'"},description:"The variant of the alert. This defines the color and icon used.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"info"'},{value:'"question"'}]}},iconMapping:{defaultValue:null,description:`The component maps the variant prop to a range of different icons.
If you wish to change this mapping, you can provide your own.`,name:"iconMapping",required:!1,type:{name:'Record<"info" | "question", ElementType<any, keyof IntrinsicElements> | ComponentType<{}>>'}},activeIconMapping:{defaultValue:null,description:`The component maps the variant prop to a range of different active icons.
If you wish to change this mapping, you can provide your own.`,name:"activeIconMapping",required:!1,type:{name:'Record<"info" | "question", ElementType<any, keyof IntrinsicElements> | ComponentType<{}>>'}},slotProps:{defaultValue:{value:"{}"},description:`The extra props for the slot components.
You can override the existing props or add new ones.`,name:"slotProps",required:!1,type:{name:"{ icon?: Partial<SvgIconProps>; activeIcon?: Partial<SvgIconProps>; } | undefined"}}}}}catch{}export{f as I};

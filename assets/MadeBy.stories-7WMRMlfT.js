import{j as n}from"./jsx-runtime-BoZ7yaty.js";import{c as x}from"./clsx.m-C7bORDfW.js";import{g as b,a as g,s as k,c as v}from"./styled-QckRPC_l.js";import{u as C}from"./DefaultPropsProvider-BgzOhfjl.js";import{I as h}from"./IconElonsoft-CcU__0fK.js";import{s as a}from"./SvgIcon.classes-CE9bwLeY.js";import"./index-DIDRz_s2.js";import"./_commonjsHelpers-gnU0ypJ3.js";import"./SvgIcon-DcWEUr91.js";function B(e){return g("ESMadeBy",e)}const M=b("ESMadeBy",["root","clickable"]),S=e=>{const{classes:t,clickable:o}=e;return v({root:["root",o&&"clickable"]},B,t)},E=k("div",{name:"ESBadge",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:{clickable:o}}=e;return[t.root,o&&t.clickable]}})(({theme:e})=>({...e.typography.caption,color:e.vars.palette.monoA.A500,cursor:"default",display:"flex",gap:"2px",flexDirection:"column",justifyContent:"center",alignItems:"center",width:"fit-content",[`& .${a.root}`]:{color:e.vars.palette.monoA.A300},[`&.${M.clickable}`]:{cursor:"pointer",[`&:hover .${a.root}, &:focus-visible .${a.root}`]:{color:e.vars.palette.monoA.A400},[`&:active .${a.root}`]:{color:e.vars.palette.monoA.A500}}})),r=e=>{const{className:t,classes:o,clickable:l,onClick:c,text:m,icon:u=n.jsx(h,{height:"19",width:"96px"}),...y}=C({props:e,name:"ESMadeBy"}),f=S({classes:o,clickable:l!==!1&&c?!0:l});return n.jsxs(E,{className:x(f.root,t),onClick:c,...y,children:[m,u]})};try{r.displayName="MadeBy",r.__docgenInfo={description:"The MadeBy component displays name of the developer.",displayName:"MadeBy",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<MadeByClasses> & Partial<ClassNameMap<never>>)"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},clickable:{defaultValue:null,description:"If `true`, component will appear clickable, even if the onClick prop is not defined.\nIf `false`, component will not appear clickable, even if onClick prop is defined.",name:"clickable",required:!1,type:{name:"boolean"}},text:{defaultValue:null,description:"Text to display.",name:"text",required:!1,type:{name:"ReactNode"}},icon:{defaultValue:null,description:"Icon to display.",name:"icon",required:!1,type:{name:"ReactNode"}}}}}catch{}const D={tags:["autodocs"],component:r,parameters:{references:["MadeBy"]},argTypes:{component:{table:{disable:!0}},icon:{table:{disable:!0}},text:{control:{type:"text"}}}},s={render:e=>n.jsx(r,{...e})};var i,p,d;s.parameters={...s.parameters,docs:{...(i=s.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: args => {
    return <MadeBy {...args} />;
  }
}`,...(d=(p=s.parameters)==null?void 0:p.docs)==null?void 0:d.source}}};const P=["Demo"];export{s as Demo,P as __namedExportsOrder,D as default};

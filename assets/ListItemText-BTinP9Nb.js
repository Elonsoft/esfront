import{j as p}from"./jsx-runtime-BoZ7yaty.js";import{c as x}from"./clsx.m-C7bORDfW.js";import{a as b,l as y}from"./MenuItem-OzUXNg8S.js";import{b as v}from"./useThemeProps-DJft-tfL.js";import{T as c}from"./Typography-BriYb5H6.js";import{s as I,c as w}from"./generateUtilityClasses-D4qQEpRV.js";const N=r=>{const{classes:e,inset:a,primary:i,secondary:o}=r;return w({root:["root",a&&"inset",i&&o&&"multiline"],primary:["primary"],secondary:["secondary"]},b,e)},P=I("div",{name:"ESListItemText",slot:"Root",overridesResolver:(r,e)=>{const{ownerState:a}=r;return[{[`& .${y.primary}`]:e.primary},{[`& .${y.secondary}`]:e.secondary},e.root,a.inset&&e.inset,a.primary&&a.secondary&&e.multiline]}})(()=>({flex:"1 1 auto",flexShrink:0,minWidth:0,marginTop:4,marginBottom:4})),u=r=>{const{className:e,children:a,sx:i,disableTypography:o,inset:d,primary:m=null,primaryTypographyProps:n,secondary:h=null,secondaryTypographyProps:f,...T}=v({props:r,name:"ESListItemText"});let s=m===null?a:m,t=h;const g={...T,inset:d,primary:!!s,secondary:!!t},l=N(g);return s!==null&&!o&&(s=p.jsx(c,{className:l.primary,color:"inherit",component:n!=null&&n.variant?void 0:"span",display:"block",variant:"inherit",...n,children:s})),t!==null&&!o&&(t=p.jsx(c,{className:l.secondary,color:"monoA.A600",display:"block",variant:"caption",...f,children:t})),p.jsxs(P,{className:x(l.root,e),sx:i,children:[s,t]})};try{u.displayName="ListItemText",u.__docgenInfo={description:"",displayName:"ListItemText",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ListItemTextClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},disableTypography:{defaultValue:{value:"false"},description:"If `true`, the children won't be wrapped by a Typography component.",name:"disableTypography",required:!1,type:{name:"boolean"}},inset:{defaultValue:{value:"false"},description:"If `true`, the children are indented. This should be used if there is no left avatar or left icon.",name:"inset",required:!1,type:{name:"boolean"}},primary:{defaultValue:null,description:"The main content element.",name:"primary",required:!1,type:{name:"ReactNode"}},primaryTypographyProps:{defaultValue:null,description:"These props will be forwarded to the primary typography component (as long as disableTypography is not `true`).",name:"primaryTypographyProps",required:!1,type:{name:'TypographyProps<"span", {}>'}},secondary:{defaultValue:null,description:"The secondary content element.",name:"secondary",required:!1,type:{name:"ReactNode"}},secondaryTypographyProps:{defaultValue:null,description:"These props will be forwarded to the secondary typography component (as long as disableTypography is not `true`).",name:"secondaryTypographyProps",required:!1,type:{name:'TypographyProps<"span", {}>'}}}}}catch{}export{u as L};

"use strict";(self.webpackChunk_esfront_react=self.webpackChunk_esfront_react||[]).push([[1265],{"./src/components/Checkbox/Checkbox.classes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{g:()=>checkboxClasses,y:()=>getCheckboxUtilityClass});var _mui_material__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@mui/utils/generateUtilityClass/generateUtilityClass.js");function getCheckboxUtilityClass(slot){return(0,_mui_material__WEBPACK_IMPORTED_MODULE_0__.ZP)("ESCheckbox",slot)}const checkboxClasses=(0,__webpack_require__("../../node_modules/@mui/utils/generateUtilityClasses/generateUtilityClasses.js").Z)("ESCheckbox",["root","checked","disabled","error","indeterminate","colorPrimary","colorSecondary","colorMonoA","colorMonoB","colorWarning","colorError","colorSuccess","colorInfo","colorBlack","colorWhite","sizeSmall","sizeMedium","sizeLarge","variantContained","variantOutlined","variantHybrid"])},"./src/components/Checkbox/Checkbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{X:()=>Checkbox});var react=__webpack_require__("../../node_modules/react/index.js"),clsx_m=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),Checkbox_classes=__webpack_require__("./src/components/Checkbox/Checkbox.classes.ts"),composeClasses=__webpack_require__("../../node_modules/@mui/utils/composeClasses/composeClasses.js"),styled=__webpack_require__("../../node_modules/@mui/material/styles/styled.js"),useThemeProps=__webpack_require__("../../node_modules/@mui/material/styles/useThemeProps.js"),capitalize=__webpack_require__("../../node_modules/@mui/material/utils/capitalize.js"),generateUtilityClass=__webpack_require__("../../node_modules/@mui/utils/generateUtilityClass/generateUtilityClass.js");function getCheckboxIconUtilityClass(slot){return(0,generateUtilityClass.ZP)("ESCheckboxIcon",slot)}const checkboxIconClasses=(0,__webpack_require__("../../node_modules/@mui/utils/generateUtilityClasses/generateUtilityClasses.js").Z)("ESCheckboxIcon",["root"]);var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const CheckboxIconRoot=(0,styled.ZP)("div",{name:"ESCheckboxIcon",slot:"Root",overridesResolver:(props,styles)=>styles.root})((({theme})=>({boxShadow:`inset 0 0 0 2px ${theme.vars.palette.monoA.A600}`,borderRadius:"6px",display:"flex",alignItems:"center",justifyContent:"center"}))),CheckboxIcon=inProps=>{const{className,sx,...props}=(0,useThemeProps.Z)({props:inProps,name:"ESCheckboxIcon"}),ownerState={...props},classes=(ownerState=>{const{classes}=ownerState;return(0,composeClasses.Z)({root:["root"]},getCheckboxIconUtilityClass,classes)})(ownerState);return(0,jsx_runtime.jsx)(CheckboxIconRoot,{className:(0,clsx_m.Z)(classes.root,className),ownerState,sx,...props})};try{CheckboxIcon.displayName="CheckboxIcon",CheckboxIcon.__docgenInfo={description:"",displayName:"CheckboxIcon",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CheckboxIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/CheckboxIcon/CheckboxIcon.tsx#CheckboxIcon"]={docgenInfo:CheckboxIcon.__docgenInfo,name:"CheckboxIcon",path:"src/components/Checkbox/CheckboxIcon/CheckboxIcon.tsx#CheckboxIcon"})}catch(__react_docgen_typescript_loader_error){}var SvgIcon=__webpack_require__("./src/components/SvgIcon/SvgIcon.tsx");const IconCheckLarge=props=>(0,jsx_runtime.jsx)(SvgIcon.l,{fill:"none",height:"24",viewBox:"0 0 24 24",width:"24",...props,children:(0,jsx_runtime.jsx)("path",{d:"M16.7992 9L10.7992 15L7.19922 11.4",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2.6"})});try{IconCheckLarge.displayName="IconCheckLarge",IconCheckLarge.__docgenInfo={description:"",displayName:"IconCheckLarge",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent",name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/icons/IconCheckLarge.tsx#IconCheckLarge"]={docgenInfo:IconCheckLarge.__docgenInfo,name:"IconCheckLarge",path:"src/components/Checkbox/icons/IconCheckLarge.tsx#IconCheckLarge"})}catch(__react_docgen_typescript_loader_error){}const IconCheckMedium=props=>(0,jsx_runtime.jsx)(SvgIcon.l,{fill:"none",height:"20",viewBox:"0 0 20 20",width:"20",...props,children:(0,jsx_runtime.jsx)("path",{d:"M14 7.5L9 12.5L6 9.5",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2"})});try{IconCheckMedium.displayName="IconCheckMedium",IconCheckMedium.__docgenInfo={description:"",displayName:"IconCheckMedium",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent",name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/icons/IconCheckMedium.tsx#IconCheckMedium"]={docgenInfo:IconCheckMedium.__docgenInfo,name:"IconCheckMedium",path:"src/components/Checkbox/icons/IconCheckMedium.tsx#IconCheckMedium"})}catch(__react_docgen_typescript_loader_error){}const IconCheckSmall=props=>(0,jsx_runtime.jsx)(SvgIcon.l,{fill:"none",height:"16",viewBox:"0 0 16 16",width:"16",...props,children:(0,jsx_runtime.jsx)("path",{d:"M11.131 6.37012L7.50092 10.0001L5.16602 7.66382",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2"})});try{IconCheckSmall.displayName="IconCheckSmall",IconCheckSmall.__docgenInfo={description:"",displayName:"IconCheckSmall",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent",name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/icons/IconCheckSmall.tsx#IconCheckSmall"]={docgenInfo:IconCheckSmall.__docgenInfo,name:"IconCheckSmall",path:"src/components/Checkbox/icons/IconCheckSmall.tsx#IconCheckSmall"})}catch(__react_docgen_typescript_loader_error){}const IconIndeterminateLarge=props=>(0,jsx_runtime.jsx)(SvgIcon.l,{fill:"none",height:"24",viewBox:"0 0 24 24",width:"24",...props,children:(0,jsx_runtime.jsx)("path",{d:"M7 12H17",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2.6"})});try{IconIndeterminateLarge.displayName="IconIndeterminateLarge",IconIndeterminateLarge.__docgenInfo={description:"",displayName:"IconIndeterminateLarge",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent",name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/icons/IconIndeterminateLarge.tsx#IconIndeterminateLarge"]={docgenInfo:IconIndeterminateLarge.__docgenInfo,name:"IconIndeterminateLarge",path:"src/components/Checkbox/icons/IconIndeterminateLarge.tsx#IconIndeterminateLarge"})}catch(__react_docgen_typescript_loader_error){}const IconIndeterminateMedium=props=>(0,jsx_runtime.jsx)(SvgIcon.l,{fill:"none",height:"20",viewBox:"0 0 20 20",width:"20",...props,children:(0,jsx_runtime.jsx)("path",{d:"M6 10H14",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2"})});try{IconIndeterminateMedium.displayName="IconIndeterminateMedium",IconIndeterminateMedium.__docgenInfo={description:"",displayName:"IconIndeterminateMedium",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent",name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/icons/IconIndeterminateMedium.tsx#IconIndeterminateMedium"]={docgenInfo:IconIndeterminateMedium.__docgenInfo,name:"IconIndeterminateMedium",path:"src/components/Checkbox/icons/IconIndeterminateMedium.tsx#IconIndeterminateMedium"})}catch(__react_docgen_typescript_loader_error){}const IconIndeterminateSmall=props=>(0,jsx_runtime.jsx)(SvgIcon.l,{fill:"none",height:"16",viewBox:"0 0 16 16",width:"16",...props,children:(0,jsx_runtime.jsx)("path",{d:"M5 8H11",stroke:"currentColor",strokeLinecap:"round",strokeWidth:"2"})});try{IconIndeterminateSmall.displayName="IconIndeterminateSmall",IconIndeterminateSmall.__docgenInfo={description:"",displayName:"IconIndeterminateSmall",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SvgIconClasses>"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},size:{defaultValue:null,description:"The width and height of the icon.",name:"size",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"The width of the icon.",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"The height of the icon.",name:"height",required:!1,type:{name:"string"}},container:{defaultValue:null,description:"If true, allows to set the container size, without resizing the svg element itself.",name:"container",required:!1,type:{name:"boolean"}},containerSize:{defaultValue:null,description:"The width and height of the icon container.",name:"containerSize",required:!1,type:{name:"string"}},containerWidth:{defaultValue:null,description:"The width of the icon container.",name:"containerWidth",required:!1,type:{name:"string"}},containerHeight:{defaultValue:null,description:"The height of the icon container.",name:"containerHeight",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Provides a human-readable title for the element that contains it.\nhttps://www.w3.org/TR/SVG-access/#Equivalent",name:"title",required:!1,type:{name:"string"}},ContainerProps:{defaultValue:null,description:"Props applied to the container element.",name:"ContainerProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/icons/IconIndeterminateSmall.tsx#IconIndeterminateSmall"]={docgenInfo:IconIndeterminateSmall.__docgenInfo,name:"IconIndeterminateSmall",path:"src/components/Checkbox/icons/IconIndeterminateSmall.tsx#IconIndeterminateSmall"})}catch(__react_docgen_typescript_loader_error){}var SwitchBase=__webpack_require__("./src/components/SwitchBase/SwitchBase.tsx");const CheckboxRoot=(0,styled.ZP)(SwitchBase.H,{shouldForwardProp:prop=>(prop=>"ownerState"!==prop&&"theme"!==prop&&"sx"!==prop&&"as"!==prop&&"classes"!==prop)(prop)||"classes"===prop,name:"ESCheckbox",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState}=props;return[styles.root,ownerState.indeterminate&&styles.indeterminate,ownerState.checked&&styles.checked,ownerState.disabled&&styles.disabled,ownerState.error&&styles.error,styles[`size${(0,capitalize.Z)(ownerState.size)}`],styles[`color${(0,capitalize.Z)(ownerState.color)}`],styles[`variant${(0,capitalize.Z)(ownerState.variant)}`]]}})((({theme})=>({"& svg":{borderRadius:"6px","& path":{stroke:"transparent"}},"@media (hover: hover)":{[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.disabled}):not(.${Checkbox_classes.g.indeterminate})`]:{"&:hover":{"& svg":{"& path":{stroke:theme.vars.palette.monoA.A400}}},"&:active":{"& svg":{"& path":{stroke:theme.vars.palette.monoA.A600}}}}},[`&.${Checkbox_classes.g.sizeLarge}`]:{padding:"8px",[`& .${checkboxIconClasses.root}`]:{borderRadius:"6px",height:"22px",width:"22px",margin:"1px"},"& svg":{fontSize:"24px",height:"24px !important",width:"24px !important"}},[`&.${Checkbox_classes.g.sizeMedium}`]:{padding:"8px",[`& .${checkboxIconClasses.root}`]:{borderRadius:"4px",height:"18px",width:"18px",margin:"1px"},"& svg":{fontSize:"20px",height:"20px !important",width:"20px !important"}},[`&.${Checkbox_classes.g.sizeSmall}`]:{padding:"10px",[`& .${checkboxIconClasses.root}`]:{borderRadius:"4px",height:"14px",width:"14px",margin:"1px"},"& svg":{fontSize:"16px",height:"16px !important",width:"16px !important"}},[`&.${Checkbox_classes.g.variantOutlined}, &.${Checkbox_classes.g.variantHybrid}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 1px ${theme.vars.palette.monoA.A500}`}},[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{"& svg":{"& path":{stroke:theme.vars.palette.monoB[500]}},[`& .${checkboxIconClasses.root}`]:{background:"currentColor",boxShadow:"none"}},[`&.${Checkbox_classes.g.variantOutlined}`]:{"& svg":{"& path":{stroke:"currentColor"}}}},background:"transparent",color:theme.vars.palette.monoA.A600,"--hovered":theme.vars.palette.monoA.A50,"--pressed":theme.vars.palette.monoA.A150,[`&.${Checkbox_classes.g.disabled}`]:{cursor:"not-allowed",pointerEvents:"auto",opacity:"30%"},[`&.${Checkbox_classes.g.colorSuccess}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.success[300],"--hovered":theme.vars.palette.success.A50,"--pressed":theme.vars.palette.monoA.A150}},[`&.${Checkbox_classes.g.colorMonoB}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{"& path":{stroke:theme.vars.palette.monoA[500]}},color:theme.vars.palette.monoB[500],"--hovered":theme.vars.palette.monoB.A50,"--pressed":theme.vars.palette.monoB.A150},color:theme.vars.palette.monoB.A600,"--hovered":theme.vars.palette.monoB.A50,"--pressed":theme.vars.palette.monoB.A150,[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.indeterminate})`]:{[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 2px ${theme.vars.palette.monoB.A600}`}}},[`&.${Checkbox_classes.g.variantOutlined}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 1px ${theme.vars.palette.monoB.A600}`}},"@media (hover: hover)":{[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.disabled}):not(.${Checkbox_classes.g.indeterminate})`]:{"&:hover":{"& svg":{"& path":{stroke:theme.vars.palette.monoB.A400}}},"&:active":{"& svg":{"& path":{stroke:theme.vars.palette.monoB.A600}}}}},"&:focus":{backgroundColor:theme.vars.palette.monoB.A200},"&:active":{backgroundColor:theme.vars.palette.monoB.A150}},[`&.${Checkbox_classes.g.colorBlack}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.black[500],"--hovered":theme.vars.palette.black.A50,"--pressed":theme.vars.palette.black.A150,[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{"& svg":{"& path":{stroke:theme.vars.palette.white[500]}}}},color:theme.vars.palette.black.A600,"--hovered":theme.vars.palette.black.A50,"--pressed":theme.vars.palette.black.A150,[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.indeterminate})`]:{color:theme.vars.palette.black[500],"--hovered":theme.vars.palette.black.A50,"--pressed":theme.vars.palette.black.A150,[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 2px ${theme.vars.palette.black.A600}`}}},[`&.${Checkbox_classes.g.variantOutlined}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 1px ${theme.vars.palette.black.A600}`}},"@media (hover: hover)":{[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.disabled}):not(.${Checkbox_classes.g.indeterminate})`]:{"&:hover":{"& svg":{"& path":{stroke:theme.vars.palette.black.A400}}},"&:active":{"& svg":{"& path":{stroke:theme.vars.palette.black.A600}}}}},"&:focus":{backgroundColor:theme.vars.palette.black.A200},"&:active":{backgroundColor:theme.vars.palette.black.A150}},[`&.${Checkbox_classes.g.colorWhite}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.white[500],"--hovered":theme.vars.palette.white.A50,"--pressed":theme.vars.palette.white.A150,[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{"& svg":{"& path":{stroke:theme.vars.palette.black[500]}}}},[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.indeterminate})`]:{color:theme.vars.palette.white[500],"--hovered":theme.vars.palette.white.A50,"--pressed":theme.vars.palette.white.A150,[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 2px ${theme.vars.palette.white.A600}`}}},[`&.${Checkbox_classes.g.variantOutlined}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 1px ${theme.vars.palette.white.A600}`}},"@media (hover: hover)":{[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.disabled}):not(.${Checkbox_classes.g.indeterminate})`]:{"&:hover":{"& svg":{"& path":{stroke:theme.vars.palette.white.A400}}},"&:active":{"& svg":{"& path":{stroke:theme.vars.palette.white.A600}}}}},"&:focus":{backgroundColor:theme.vars.palette.white.A200},"&:active":{backgroundColor:theme.vars.palette.white.A150}},[`&.${Checkbox_classes.g.colorMonoA}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.monoA[500],"--hovered":theme.vars.palette.monoA.A50,"--pressed":theme.vars.palette.monoA.A150},[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.indeterminate})`]:{[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 2px ${theme.vars.palette.monoA.A600}`}}},[`&.${Checkbox_classes.g.variantOutlined}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 1px ${theme.vars.palette.monoA.A600}`}}},[`&.${Checkbox_classes.g.colorPrimary}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.primary[300],"--hovered":theme.vars.palette.primary.A50,"--pressed":theme.vars.palette.primary.A150}},[`&.${Checkbox_classes.g.colorSecondary}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.secondary[300],"--hovered":theme.vars.palette.secondary.A50,"--pressed":theme.vars.palette.secondary.A150}},[`&.${Checkbox_classes.g.colorWarning}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.warning[300],"--hovered":theme.vars.palette.warning.A50,"--pressed":theme.vars.palette.warning.A150}},[`&.${Checkbox_classes.g.colorError}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.error[300],"--hovered":theme.vars.palette.error.A50,"--pressed":theme.vars.palette.error.A150}},[`&.${Checkbox_classes.g.colorInfo}`]:{[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.info[300],"--hovered":theme.vars.palette.info.A50,"--pressed":theme.vars.palette.info.A150}},[`&.${Checkbox_classes.g.error}`]:{color:theme.vars.palette.error[300],"--hovered":theme.vars.palette.error.A50,"--pressed":theme.vars.palette.error.A150,[`&.${Checkbox_classes.g.checked}, &.${Checkbox_classes.g.indeterminate}`]:{color:theme.vars.palette.error[300],"--hovered":theme.vars.palette.error.A50,"--pressed":theme.vars.palette.error.A150,[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{"& svg":{"& path":{stroke:theme.vars.palette.monoB[500]}}}},[`&:not(.${Checkbox_classes.g.checked}):not(.${Checkbox_classes.g.indeterminate})`]:{[`&.${Checkbox_classes.g.variantContained}, &.${Checkbox_classes.g.variantHybrid}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 2px ${theme.vars.palette.error[300]}`}}},[`&.${Checkbox_classes.g.variantOutlined}`]:{[`& .${checkboxIconClasses.root}`]:{boxShadow:`inset 0 0 0 1px ${theme.vars.palette.error[300]}`}},"&:focus":{backgroundColor:theme.vars.palette.error.A200},"&:active":{backgroundColor:theme.vars.palette.error.A150}}}))),defaultIcon={large:(0,jsx_runtime.jsx)(CheckboxIcon,{children:(0,jsx_runtime.jsx)(IconCheckLarge,{})}),medium:(0,jsx_runtime.jsx)(CheckboxIcon,{children:(0,jsx_runtime.jsx)(IconCheckMedium,{})}),small:(0,jsx_runtime.jsx)(CheckboxIcon,{children:(0,jsx_runtime.jsx)(IconCheckSmall,{})})},defaultIndeterminateIcon={large:(0,jsx_runtime.jsx)(CheckboxIcon,{children:(0,jsx_runtime.jsx)(IconIndeterminateLarge,{})}),medium:(0,jsx_runtime.jsx)(CheckboxIcon,{children:(0,jsx_runtime.jsx)(IconIndeterminateMedium,{})}),small:(0,jsx_runtime.jsx)(CheckboxIcon,{children:(0,jsx_runtime.jsx)(IconIndeterminateSmall,{})})},Checkbox=react.forwardRef((function Checkbox(inProps,ref){const props=(0,useThemeProps.Z)({props:inProps,name:"ESCheckbox"}),{size="medium",variant="contained",color="primary",checkedIcon=defaultIcon[size],icon:iconProp=defaultIcon[size],indeterminate=!1,indeterminateIcon:indeterminateIconProp=defaultIndeterminateIcon[size],iconMapping=defaultIcon,inputProps,className,checked,disabled,...other}=props,icon=indeterminate?indeterminateIconProp:iconProp??iconMapping[size],indeterminateIcon=indeterminate?indeterminateIconProp:checkedIcon??iconMapping[size],ownerState={...props,color,indeterminate,size,checked,disabled,variant},classes=(ownerState=>{const{classes,indeterminate,color,size,checked,disabled,variant,error}=ownerState,slots={root:["root",indeterminate&&"indeterminate",checked&&"checked",disabled&&"disabled",error&&"error",`color${(0,capitalize.Z)(color)}`,`size${(0,capitalize.Z)(size)}`,`variant${(0,capitalize.Z)(variant)}`],container:["container"]},composedClasses=(0,composeClasses.Z)(slots,Checkbox_classes.y,classes);return{...classes,...composedClasses}})(ownerState);return(0,jsx_runtime.jsx)(CheckboxRoot,{ref,TouchRippleProps:{center:!0},checked,checkedIcon:indeterminateIcon,className:(0,clsx_m.Z)(classes.root,className),disabled,icon,inputProps:{"data-indeterminate":indeterminate,...inputProps},ownerState,type:"checkbox",...other,classes})}));try{Checkbox.displayName="Checkbox",Checkbox.__docgenInfo={description:"",displayName:"Checkbox",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CheckboxClasses>"}},color:{defaultValue:{value:"'primary'"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"error"'},{value:'"info"'},{value:'"success"'},{value:'"warning"'},{value:'"monoB"'},{value:'"monoA"'},{value:'"black"'},{value:'"white"'}]}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Class applied to the root element.",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},error:{defaultValue:null,description:"If `true`, the component is error.",name:"error",required:!1,type:{name:"boolean"}},variant:{defaultValue:{value:"'contained'"},description:"The variant of the component.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"contained"'},{value:'"outlined"'},{value:'"hybrid"'}]}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:'The value of the component. The DOM API casts this to a string.\nThe browser uses "on" as the default value.',name:"value",required:!1,type:{name:"string | number | readonly string[]"}},defaultChecked:{defaultValue:null,description:"The default checked state. Use when the component is not controlled.",name:"defaultChecked",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.\n@param event The event source of the callback.\nYou can pull out the new checked state by accessing `event.target.checked` (boolean).",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},icon:{defaultValue:null,description:"The icon to display when the component is unchecked.",name:"icon",required:!1,type:{name:"ReactNode"}},checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:{value:"false"},description:"If `true`, the component appears indeterminate.\nThis does not set the native input element to indeterminate due\nto inconsistent behavior across browsers.\nHowever, we set a `data-indeterminate` attribute on the `input`.",name:"indeterminate",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense checkbox styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'},{value:'"medium"'}]}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},iconMapping:{defaultValue:null,description:"The icon to display when the component is unchecked.",name:"iconMapping",required:!1,type:{name:"{ large: ReactNode; medium: ReactNode; small: ReactNode; }"}},checkedIcon:{defaultValue:null,description:"The icon to display when the component is checked.",name:"checkedIcon",required:!1,type:{name:"ReactNode"}},disableTouchRipple:{defaultValue:null,description:"If true, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the touch ripple component.",name:"TouchRippleProps",required:!1,type:{name:'Partial<Pick<TouchRippleParams, "center" | "pressGrowDuration" | "minimumPressDuration">>'}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},edge:{defaultValue:{value:"false"},description:"If given, uses a negative margin to counteract the padding on one\nside (this is often helpful for aligning the left or right\nside of the icon with content above or below, without ruining the border\nsize and shape).",name:"edge",required:!1,type:{name:'false | "start" | "end"'}},inputProps:{defaultValue:null,description:"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.",name:"inputProps",required:!1,type:{name:"InputHTMLAttributes<HTMLInputElement>"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"Ref<HTMLInputElement>"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},indeterminateIcon:{defaultValue:null,description:"The icon to display when the component is indeterminate.",name:"indeterminateIcon",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Checkbox/Checkbox.tsx#Checkbox"]={docgenInfo:Checkbox.__docgenInfo,name:"Checkbox",path:"src/components/Checkbox/Checkbox.tsx#Checkbox"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/SwitchBase/SwitchBase.classes.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>switchBaseClasses,Q:()=>getSwitchBaseUtilityClass});var _mui_material__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@mui/utils/generateUtilityClass/generateUtilityClass.js");function getSwitchBaseUtilityClass(slot){return(0,_mui_material__WEBPACK_IMPORTED_MODULE_0__.ZP)("ESSwitchBase",slot)}const switchBaseClasses=(0,__webpack_require__("../../node_modules/@mui/utils/generateUtilityClasses/generateUtilityClasses.js").Z)("ESSwitchBase",["root","checked","disabled","input","edgeStart","edgeEnd"])},"./src/components/SwitchBase/SwitchBase.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>SwitchBase});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),clsx__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../../node_modules/clsx/dist/clsx.m.js"),_SwitchBase_classes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/SwitchBase/SwitchBase.classes.ts"),_mui_base__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@mui/utils/composeClasses/composeClasses.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@mui/material/styles/styled.js"),_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/@mui/material/styles/useThemeProps.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@mui/material/utils/capitalize.js"),_mui_material__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../node_modules/@mui/material/FormControl/useFormControl.js"),_hooks__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/hooks/useControlled/useControlled.ts"),_ButtonBase__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/ButtonBase/ButtonBase.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const SwitchBaseRoot=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__.ZP)(_ButtonBase__WEBPACK_IMPORTED_MODULE_6__.X,{name:"ESSwitchBase",slot:"Root",overridesResolver:(props,styles)=>{const{ownerState:{disabled,edge,checked}}=props;return[styles.root,checked&&styles.checked,disabled&&styles.disabled,edge&&styles[`edge${(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z)(edge)}`]]}})((({theme})=>({padding:9,borderRadius:"50%",[`&.${_SwitchBase_classes__WEBPACK_IMPORTED_MODULE_4__.N.edgeStart}`]:{marginLeft:-12},[`&.${_SwitchBase_classes__WEBPACK_IMPORTED_MODULE_4__.N.edgeEnd}`]:{marginRight:-12},"&:not(:disabled):has(:focus-visible)":{outline:`2px solid ${theme.vars.palette.monoA[500]}`}}))),SwitchBaseInput=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_5__.ZP)("input",{name:"ESSwitchBase",slot:"Input",overridesResolver:(props,styles)=>styles.input})({cursor:"inherit",position:"absolute",opacity:0,width:"100%",height:"100%",top:0,left:0,margin:0,padding:0,zIndex:1}),SwitchBase=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((function SwitchBase(inProps,ref){const{classes:inClasses,autoFocus,checked:checkedProp,checkedIcon,className,defaultChecked,disabled:disabledProp,disableFocusRipple=!1,edge=!1,icon,id,inputProps,inputRef,name,onBlur,onChange,onFocus,readOnly,required=!1,tabIndex,type,value,...other}=(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_7__.Z)({props:inProps,name:"ESSwitchBase"}),[checked,setCheckedState]=(0,_hooks__WEBPACK_IMPORTED_MODULE_8__.u)(Boolean(defaultChecked),checkedProp),muiFormControl=(0,_mui_material__WEBPACK_IMPORTED_MODULE_9__.Z)();let disabled=disabledProp;muiFormControl&&void 0===disabled&&(disabled=muiFormControl.disabled);const hasLabelFor="checkbox"===type||"radio"===type,ownerState={classes:inClasses,checked,disabled,disableFocusRipple,edge},classes=(ownerState=>{const{classes,checked,disabled,edge}=ownerState,slots={root:["root",checked&&"checked",disabled&&"disabled",edge&&`edge${(0,_mui_material__WEBPACK_IMPORTED_MODULE_2__.Z)(edge)}`],input:["input"]};return(0,_mui_base__WEBPACK_IMPORTED_MODULE_3__.Z)(slots,_SwitchBase_classes__WEBPACK_IMPORTED_MODULE_4__.Q,classes)})(ownerState);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(SwitchBaseRoot,{ref,centerRipple:!0,className:(0,clsx__WEBPACK_IMPORTED_MODULE_10__.Z)(classes.root,className),component:"span",disabled,focusRipple:!disableFocusRipple,ownerState,role:void 0,tabIndex:null,onBlur:event=>{onBlur&&onBlur(event),muiFormControl&&muiFormControl.onBlur&&muiFormControl.onBlur(event)},onFocus:event=>{onFocus&&onFocus(event),muiFormControl&&muiFormControl.onFocus&&muiFormControl.onFocus(event)},...other,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SwitchBaseInput,{ref:inputRef,autoFocus,checked:checkedProp,className:classes.input,defaultChecked,disabled,id:hasLabelFor?id:void 0,name,readOnly,required,tabIndex,type,value,onChange:event=>{if(event.nativeEvent.defaultPrevented)return;const newChecked=event.target.checked;setCheckedState(newChecked),onChange&&onChange(event,newChecked)},...inputProps}),checked?checkedIcon:icon]})}));try{SwitchBase.displayName="SwitchBase",SwitchBase.__docgenInfo={description:"",displayName:"SwitchBase",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<SwitchBaseClasses>"}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},disabled:{defaultValue:null,description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},defaultChecked:{defaultValue:null,description:"The default checked state. Use when the component is not controlled.",name:"defaultChecked",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.\n@param event The event source of the callback.\nYou can pull out the new value by accessing `event.target.value` (string).\nYou can pull out the new checked state by accessing `event.target.checked` (boolean).",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, checked: boolean) => void)"}},icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"ReactNode"}},checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},checkedIcon:{defaultValue:null,description:"",name:"checkedIcon",required:!0,type:{name:"ReactNode"}},disableTouchRipple:{defaultValue:null,description:"If true, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the touch ripple component.",name:"TouchRippleProps",required:!1,type:{name:'Partial<Pick<TouchRippleParams, "center" | "pressGrowDuration" | "minimumPressDuration">>'}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},edge:{defaultValue:{value:"false"},description:"If given, uses a negative margin to counteract the padding on one\nside (this is often helpful for aligning the left or right\nside of the icon with content above or below, without ruining the border\nsize and shape).",name:"edge",required:!1,type:{name:'false | "start" | "end"'}},inputProps:{defaultValue:null,description:"[Attributes] applied to the `input` element.",name:"inputProps",required:!1,type:{name:"InputHTMLAttributes<HTMLInputElement>"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"Ref<any>"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/SwitchBase/SwitchBase.tsx#SwitchBase"]={docgenInfo:SwitchBase.__docgenInfo,name:"SwitchBase",path:"src/components/SwitchBase/SwitchBase.tsx#SwitchBase"})}catch(__react_docgen_typescript_loader_error){}},"./src/hooks/useControlled/useControlled.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{u:()=>useControlled});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const useControlled=(defaultValue,controlled)=>{const{current:isControlled}=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0!==controlled),[valueState,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue),setUncontrolled=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value=>{isControlled||setValue(value)}),[]);return[isControlled?controlled:valueState,setUncontrolled]}}}]);